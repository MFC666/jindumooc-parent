<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.jindumooc.dao.BizTargetlogMapper" >
  <resultMap id="BaseResultMap" type="com.jindumooc.pojo.BizTargetlog" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="target_type" property="targetType" jdbcType="VARCHAR" />
    <result column="target_id" property="targetId" jdbcType="VARCHAR" />
    <result column="action" property="action" jdbcType="VARCHAR" />
    <result column="level" property="level" jdbcType="SMALLINT" />
    <result column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="ip" property="ip" jdbcType="VARCHAR" />
    <result column="created_time" property="createdTime" jdbcType="INTEGER" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.jindumooc.pojo.BizTargetlogWithBLOBs" extends="BaseResultMap" >
    <result column="message" property="message" jdbcType="LONGVARCHAR" />
    <result column="context" property="context" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, target_type, target_id, action, level, user_id, ip, created_time
  </sql>
  <sql id="Blob_Column_List" >
    message, context
  </sql>
  <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs" parameterType="com.jindumooc.pojo.BizTargetlogExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from biz_targetlog
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.jindumooc.pojo.BizTargetlogExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from biz_targetlog
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from biz_targetlog
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from biz_targetlog
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.jindumooc.pojo.BizTargetlogExample" >
    delete from biz_targetlog
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.jindumooc.pojo.BizTargetlogWithBLOBs" >
    insert into biz_targetlog (id, target_type, target_id, 
      action, level, user_id, 
      ip, created_time, message, 
      context)
    values (#{id,jdbcType=INTEGER}, #{targetType,jdbcType=VARCHAR}, #{targetId,jdbcType=VARCHAR}, 
      #{action,jdbcType=VARCHAR}, #{level,jdbcType=SMALLINT}, #{userId,jdbcType=INTEGER}, 
      #{ip,jdbcType=VARCHAR}, #{createdTime,jdbcType=INTEGER}, #{message,jdbcType=LONGVARCHAR}, 
      #{context,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.jindumooc.pojo.BizTargetlogWithBLOBs" >
    insert into biz_targetlog
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="targetType != null" >
        target_type,
      </if>
      <if test="targetId != null" >
        target_id,
      </if>
      <if test="action != null" >
        action,
      </if>
      <if test="level != null" >
        level,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="ip != null" >
        ip,
      </if>
      <if test="createdTime != null" >
        created_time,
      </if>
      <if test="message != null" >
        message,
      </if>
      <if test="context != null" >
        context,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="targetType != null" >
        #{targetType,jdbcType=VARCHAR},
      </if>
      <if test="targetId != null" >
        #{targetId,jdbcType=VARCHAR},
      </if>
      <if test="action != null" >
        #{action,jdbcType=VARCHAR},
      </if>
      <if test="level != null" >
        #{level,jdbcType=SMALLINT},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="ip != null" >
        #{ip,jdbcType=VARCHAR},
      </if>
      <if test="createdTime != null" >
        #{createdTime,jdbcType=INTEGER},
      </if>
      <if test="message != null" >
        #{message,jdbcType=LONGVARCHAR},
      </if>
      <if test="context != null" >
        #{context,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.jindumooc.pojo.BizTargetlogExample" resultType="java.lang.Integer" >
    select count(*) from biz_targetlog
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update biz_targetlog
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.targetType != null" >
        target_type = #{record.targetType,jdbcType=VARCHAR},
      </if>
      <if test="record.targetId != null" >
        target_id = #{record.targetId,jdbcType=VARCHAR},
      </if>
      <if test="record.action != null" >
        action = #{record.action,jdbcType=VARCHAR},
      </if>
      <if test="record.level != null" >
        level = #{record.level,jdbcType=SMALLINT},
      </if>
      <if test="record.userId != null" >
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.ip != null" >
        ip = #{record.ip,jdbcType=VARCHAR},
      </if>
      <if test="record.createdTime != null" >
        created_time = #{record.createdTime,jdbcType=INTEGER},
      </if>
      <if test="record.message != null" >
        message = #{record.message,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.context != null" >
        context = #{record.context,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map" >
    update biz_targetlog
    set id = #{record.id,jdbcType=INTEGER},
      target_type = #{record.targetType,jdbcType=VARCHAR},
      target_id = #{record.targetId,jdbcType=VARCHAR},
      action = #{record.action,jdbcType=VARCHAR},
      level = #{record.level,jdbcType=SMALLINT},
      user_id = #{record.userId,jdbcType=INTEGER},
      ip = #{record.ip,jdbcType=VARCHAR},
      created_time = #{record.createdTime,jdbcType=INTEGER},
      message = #{record.message,jdbcType=LONGVARCHAR},
      context = #{record.context,jdbcType=LONGVARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update biz_targetlog
    set id = #{record.id,jdbcType=INTEGER},
      target_type = #{record.targetType,jdbcType=VARCHAR},
      target_id = #{record.targetId,jdbcType=VARCHAR},
      action = #{record.action,jdbcType=VARCHAR},
      level = #{record.level,jdbcType=SMALLINT},
      user_id = #{record.userId,jdbcType=INTEGER},
      ip = #{record.ip,jdbcType=VARCHAR},
      created_time = #{record.createdTime,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.jindumooc.pojo.BizTargetlogWithBLOBs" >
    update biz_targetlog
    <set >
      <if test="targetType != null" >
        target_type = #{targetType,jdbcType=VARCHAR},
      </if>
      <if test="targetId != null" >
        target_id = #{targetId,jdbcType=VARCHAR},
      </if>
      <if test="action != null" >
        action = #{action,jdbcType=VARCHAR},
      </if>
      <if test="level != null" >
        level = #{level,jdbcType=SMALLINT},
      </if>
      <if test="userId != null" >
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="ip != null" >
        ip = #{ip,jdbcType=VARCHAR},
      </if>
      <if test="createdTime != null" >
        created_time = #{createdTime,jdbcType=INTEGER},
      </if>
      <if test="message != null" >
        message = #{message,jdbcType=LONGVARCHAR},
      </if>
      <if test="context != null" >
        context = #{context,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.jindumooc.pojo.BizTargetlogWithBLOBs" >
    update biz_targetlog
    set target_type = #{targetType,jdbcType=VARCHAR},
      target_id = #{targetId,jdbcType=VARCHAR},
      action = #{action,jdbcType=VARCHAR},
      level = #{level,jdbcType=SMALLINT},
      user_id = #{userId,jdbcType=INTEGER},
      ip = #{ip,jdbcType=VARCHAR},
      created_time = #{createdTime,jdbcType=INTEGER},
      message = #{message,jdbcType=LONGVARCHAR},
      context = #{context,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.jindumooc.pojo.BizTargetlog" >
    update biz_targetlog
    set target_type = #{targetType,jdbcType=VARCHAR},
      target_id = #{targetId,jdbcType=VARCHAR},
      action = #{action,jdbcType=VARCHAR},
      level = #{level,jdbcType=SMALLINT},
      user_id = #{userId,jdbcType=INTEGER},
      ip = #{ip,jdbcType=VARCHAR},
      created_time = #{createdTime,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>