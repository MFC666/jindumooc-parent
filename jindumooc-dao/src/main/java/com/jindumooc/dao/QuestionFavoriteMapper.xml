<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.jindumooc.dao.QuestionFavoriteMapper" >
  <resultMap id="BaseResultMap" type="com.jindumooc.pojo.QuestionFavorite" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="questionId" property="questionid" jdbcType="INTEGER" />
    <result column="targetType" property="targettype" jdbcType="VARCHAR" />
    <result column="targetId" property="targetid" jdbcType="INTEGER" />
    <result column="target" property="target" jdbcType="VARCHAR" />
    <result column="userId" property="userid" jdbcType="INTEGER" />
    <result column="createdTime" property="createdtime" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, questionId, targetType, targetId, target, userId, createdTime
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.jindumooc.pojo.QuestionFavoriteExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from question_favorite
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from question_favorite
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from question_favorite
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.jindumooc.pojo.QuestionFavoriteExample" >
    delete from question_favorite
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.jindumooc.pojo.QuestionFavorite" >
    insert into question_favorite (id, questionId, targetType, 
      targetId, target, userId, 
      createdTime)
    values (#{id,jdbcType=INTEGER}, #{questionid,jdbcType=INTEGER}, #{targettype,jdbcType=VARCHAR}, 
      #{targetid,jdbcType=INTEGER}, #{target,jdbcType=VARCHAR}, #{userid,jdbcType=INTEGER}, 
      #{createdtime,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.jindumooc.pojo.QuestionFavorite" >
    insert into question_favorite
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="questionid != null" >
        questionId,
      </if>
      <if test="targettype != null" >
        targetType,
      </if>
      <if test="targetid != null" >
        targetId,
      </if>
      <if test="target != null" >
        target,
      </if>
      <if test="userid != null" >
        userId,
      </if>
      <if test="createdtime != null" >
        createdTime,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="questionid != null" >
        #{questionid,jdbcType=INTEGER},
      </if>
      <if test="targettype != null" >
        #{targettype,jdbcType=VARCHAR},
      </if>
      <if test="targetid != null" >
        #{targetid,jdbcType=INTEGER},
      </if>
      <if test="target != null" >
        #{target,jdbcType=VARCHAR},
      </if>
      <if test="userid != null" >
        #{userid,jdbcType=INTEGER},
      </if>
      <if test="createdtime != null" >
        #{createdtime,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.jindumooc.pojo.QuestionFavoriteExample" resultType="java.lang.Integer" >
    select count(*) from question_favorite
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update question_favorite
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.questionid != null" >
        questionId = #{record.questionid,jdbcType=INTEGER},
      </if>
      <if test="record.targettype != null" >
        targetType = #{record.targettype,jdbcType=VARCHAR},
      </if>
      <if test="record.targetid != null" >
        targetId = #{record.targetid,jdbcType=INTEGER},
      </if>
      <if test="record.target != null" >
        target = #{record.target,jdbcType=VARCHAR},
      </if>
      <if test="record.userid != null" >
        userId = #{record.userid,jdbcType=INTEGER},
      </if>
      <if test="record.createdtime != null" >
        createdTime = #{record.createdtime,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update question_favorite
    set id = #{record.id,jdbcType=INTEGER},
      questionId = #{record.questionid,jdbcType=INTEGER},
      targetType = #{record.targettype,jdbcType=VARCHAR},
      targetId = #{record.targetid,jdbcType=INTEGER},
      target = #{record.target,jdbcType=VARCHAR},
      userId = #{record.userid,jdbcType=INTEGER},
      createdTime = #{record.createdtime,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.jindumooc.pojo.QuestionFavorite" >
    update question_favorite
    <set >
      <if test="questionid != null" >
        questionId = #{questionid,jdbcType=INTEGER},
      </if>
      <if test="targettype != null" >
        targetType = #{targettype,jdbcType=VARCHAR},
      </if>
      <if test="targetid != null" >
        targetId = #{targetid,jdbcType=INTEGER},
      </if>
      <if test="target != null" >
        target = #{target,jdbcType=VARCHAR},
      </if>
      <if test="userid != null" >
        userId = #{userid,jdbcType=INTEGER},
      </if>
      <if test="createdtime != null" >
        createdTime = #{createdtime,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.jindumooc.pojo.QuestionFavorite" >
    update question_favorite
    set questionId = #{questionid,jdbcType=INTEGER},
      targetType = #{targettype,jdbcType=VARCHAR},
      targetId = #{targetid,jdbcType=INTEGER},
      target = #{target,jdbcType=VARCHAR},
      userId = #{userid,jdbcType=INTEGER},
      createdTime = #{createdtime,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="getFavoriteQuestion" resultMap="getFavoriteQuestionMap">
    SELECT q.id,q.stem,f.createdTime,v.`name`
    FROM question_favorite f,question q,testpaper_item_v8 t,testpaper_v8 v
    WHERE f.questionId = q.id AND f.userId = #{userId} AND q.id = t.questionId AND t.testId = v.id
  </select>
  <resultMap id="getFavoriteQuestionMap" type="com.jindumooc.vojo.user.QuestionMessage">
    <result column="id" property="id" jdbcType="INTEGER"/>
    <result column="stem" property="stem" jdbcType="VARCHAR"/>
    <result column="createdTime" property="createdTime" jdbcType="INTEGER"/>
    <result column="name" property="testPaperName" jdbcType="VARCHAR"/>
  </resultMap>
  <select id="getQuestionDetail" resultMap="getQuestionDetailMap">
    SELECT id,stem,`type`,score,answer,metas,difficulty,analysis
    FROM question q
    WHERE q.id = #{questionId}
  </select>
  <resultMap id="getQuestionDetailMap" type="com.jindumooc.vojo.user.QuestionMessage">
    <result column="id" property="id" jdbcType="INTEGER"/>
    <result column="type" property="type" jdbcType="VARCHAR"/>
    <result column="stem" property="stem" jdbcType="VARCHAR"/>
    <result column="score" property="score" jdbcType="DOUBLE"/>
    <result column="answer" property="answer" jdbcType="VARCHAR"/>
    <result column="metas" property="metas" jdbcType="VARCHAR"/>
    <result column="difficulty" property="difficulty" jdbcType="VARCHAR"/>
    <result column="analysis" property="analysis" jdbcType="VARCHAR"/>
  </resultMap>
</mapper>