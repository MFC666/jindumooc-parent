<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.jindumooc.dao.RewardPointProductMapper" >
  <resultMap id="BaseResultMap" type="com.jindumooc.pojo.RewardPointProduct" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="title" property="title" jdbcType="VARCHAR" />
    <result column="img" property="img" jdbcType="VARCHAR" />
    <result column="price" property="price" jdbcType="REAL" />
    <result column="requireConsignee" property="requireconsignee" jdbcType="TINYINT" />
    <result column="requireTelephone" property="requiretelephone" jdbcType="TINYINT" />
    <result column="requireEmail" property="requireemail" jdbcType="TINYINT" />
    <result column="requireAddress" property="requireaddress" jdbcType="TINYINT" />
    <result column="status" property="status" jdbcType="VARCHAR" />
    <result column="createdTime" property="createdtime" jdbcType="INTEGER" />
    <result column="updatedTime" property="updatedtime" jdbcType="INTEGER" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.jindumooc.pojo.RewardPointProduct" extends="BaseResultMap" >
    <result column="about" property="about" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, title, img, price, requireConsignee, requireTelephone, requireEmail, requireAddress, 
    status, createdTime, updatedTime
  </sql>
  <sql id="Blob_Column_List" >
    about
  </sql>
  <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs" parameterType="com.jindumooc.pojo.RewardPointProductExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from reward_point_product
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.jindumooc.pojo.RewardPointProductExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from reward_point_product
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from reward_point_product
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from reward_point_product
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.jindumooc.pojo.RewardPointProductExample" >
    delete from reward_point_product
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.jindumooc.pojo.RewardPointProduct" >
    insert into reward_point_product (id, title, img, 
      price, requireConsignee, requireTelephone, 
      requireEmail, requireAddress, status, 
      createdTime, updatedTime, about
      )
    values (#{id,jdbcType=INTEGER}, #{title,jdbcType=VARCHAR}, #{img,jdbcType=VARCHAR}, 
      #{price,jdbcType=REAL}, #{requireconsignee,jdbcType=TINYINT}, #{requiretelephone,jdbcType=TINYINT}, 
      #{requireemail,jdbcType=TINYINT}, #{requireaddress,jdbcType=TINYINT}, #{status,jdbcType=VARCHAR}, 
      #{createdtime,jdbcType=INTEGER}, #{updatedtime,jdbcType=INTEGER}, #{about,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.jindumooc.pojo.RewardPointProduct" >
    insert into reward_point_product
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="title != null" >
        title,
      </if>
      <if test="img != null" >
        img,
      </if>
      <if test="price != null" >
        price,
      </if>
      <if test="requireconsignee != null" >
        requireConsignee,
      </if>
      <if test="requiretelephone != null" >
        requireTelephone,
      </if>
      <if test="requireemail != null" >
        requireEmail,
      </if>
      <if test="requireaddress != null" >
        requireAddress,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="createdtime != null" >
        createdTime,
      </if>
      <if test="updatedtime != null" >
        updatedTime,
      </if>
      <if test="about != null" >
        about,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="title != null" >
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="img != null" >
        #{img,jdbcType=VARCHAR},
      </if>
      <if test="price != null" >
        #{price,jdbcType=REAL},
      </if>
      <if test="requireconsignee != null" >
        #{requireconsignee,jdbcType=TINYINT},
      </if>
      <if test="requiretelephone != null" >
        #{requiretelephone,jdbcType=TINYINT},
      </if>
      <if test="requireemail != null" >
        #{requireemail,jdbcType=TINYINT},
      </if>
      <if test="requireaddress != null" >
        #{requireaddress,jdbcType=TINYINT},
      </if>
      <if test="status != null" >
        #{status,jdbcType=VARCHAR},
      </if>
      <if test="createdtime != null" >
        #{createdtime,jdbcType=INTEGER},
      </if>
      <if test="updatedtime != null" >
        #{updatedtime,jdbcType=INTEGER},
      </if>
      <if test="about != null" >
        #{about,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.jindumooc.pojo.RewardPointProductExample" resultType="java.lang.Integer" >
    select count(*) from reward_point_product
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update reward_point_product
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.title != null" >
        title = #{record.title,jdbcType=VARCHAR},
      </if>
      <if test="record.img != null" >
        img = #{record.img,jdbcType=VARCHAR},
      </if>
      <if test="record.price != null" >
        price = #{record.price,jdbcType=REAL},
      </if>
      <if test="record.requireconsignee != null" >
        requireConsignee = #{record.requireconsignee,jdbcType=TINYINT},
      </if>
      <if test="record.requiretelephone != null" >
        requireTelephone = #{record.requiretelephone,jdbcType=TINYINT},
      </if>
      <if test="record.requireemail != null" >
        requireEmail = #{record.requireemail,jdbcType=TINYINT},
      </if>
      <if test="record.requireaddress != null" >
        requireAddress = #{record.requireaddress,jdbcType=TINYINT},
      </if>
      <if test="record.status != null" >
        status = #{record.status,jdbcType=VARCHAR},
      </if>
      <if test="record.createdtime != null" >
        createdTime = #{record.createdtime,jdbcType=INTEGER},
      </if>
      <if test="record.updatedtime != null" >
        updatedTime = #{record.updatedtime,jdbcType=INTEGER},
      </if>
      <if test="record.about != null" >
        about = #{record.about,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map" >
    update reward_point_product
    set id = #{record.id,jdbcType=INTEGER},
      title = #{record.title,jdbcType=VARCHAR},
      img = #{record.img,jdbcType=VARCHAR},
      price = #{record.price,jdbcType=REAL},
      requireConsignee = #{record.requireconsignee,jdbcType=TINYINT},
      requireTelephone = #{record.requiretelephone,jdbcType=TINYINT},
      requireEmail = #{record.requireemail,jdbcType=TINYINT},
      requireAddress = #{record.requireaddress,jdbcType=TINYINT},
      status = #{record.status,jdbcType=VARCHAR},
      createdTime = #{record.createdtime,jdbcType=INTEGER},
      updatedTime = #{record.updatedtime,jdbcType=INTEGER},
      about = #{record.about,jdbcType=LONGVARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update reward_point_product
    set id = #{record.id,jdbcType=INTEGER},
      title = #{record.title,jdbcType=VARCHAR},
      img = #{record.img,jdbcType=VARCHAR},
      price = #{record.price,jdbcType=REAL},
      requireConsignee = #{record.requireconsignee,jdbcType=TINYINT},
      requireTelephone = #{record.requiretelephone,jdbcType=TINYINT},
      requireEmail = #{record.requireemail,jdbcType=TINYINT},
      requireAddress = #{record.requireaddress,jdbcType=TINYINT},
      status = #{record.status,jdbcType=VARCHAR},
      createdTime = #{record.createdtime,jdbcType=INTEGER},
      updatedTime = #{record.updatedtime,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.jindumooc.pojo.RewardPointProduct" >
    update reward_point_product
    <set >
      <if test="title != null" >
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="img != null" >
        img = #{img,jdbcType=VARCHAR},
      </if>
      <if test="price != null" >
        price = #{price,jdbcType=REAL},
      </if>
      <if test="requireconsignee != null" >
        requireConsignee = #{requireconsignee,jdbcType=TINYINT},
      </if>
      <if test="requiretelephone != null" >
        requireTelephone = #{requiretelephone,jdbcType=TINYINT},
      </if>
      <if test="requireemail != null" >
        requireEmail = #{requireemail,jdbcType=TINYINT},
      </if>
      <if test="requireaddress != null" >
        requireAddress = #{requireaddress,jdbcType=TINYINT},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=VARCHAR},
      </if>
      <if test="createdtime != null" >
        createdTime = #{createdtime,jdbcType=INTEGER},
      </if>
      <if test="updatedtime != null" >
        updatedTime = #{updatedtime,jdbcType=INTEGER},
      </if>
      <if test="about != null" >
        about = #{about,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.jindumooc.pojo.RewardPointProduct" >
    update reward_point_product
    set title = #{title,jdbcType=VARCHAR},
      img = #{img,jdbcType=VARCHAR},
      price = #{price,jdbcType=REAL},
      requireConsignee = #{requireconsignee,jdbcType=TINYINT},
      requireTelephone = #{requiretelephone,jdbcType=TINYINT},
      requireEmail = #{requireemail,jdbcType=TINYINT},
      requireAddress = #{requireaddress,jdbcType=TINYINT},
      status = #{status,jdbcType=VARCHAR},
      createdTime = #{createdtime,jdbcType=INTEGER},
      updatedTime = #{updatedtime,jdbcType=INTEGER},
      about = #{about,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.jindumooc.pojo.RewardPointProduct" >
    update reward_point_product
    set title = #{title,jdbcType=VARCHAR},
      img = #{img,jdbcType=VARCHAR},
      price = #{price,jdbcType=REAL},
      requireConsignee = #{requireconsignee,jdbcType=TINYINT},
      requireTelephone = #{requiretelephone,jdbcType=TINYINT},
      requireEmail = #{requireemail,jdbcType=TINYINT},
      requireAddress = #{requireaddress,jdbcType=TINYINT},
      status = #{status,jdbcType=VARCHAR},
      createdTime = #{createdtime,jdbcType=INTEGER},
      updatedTime = #{updatedtime,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>