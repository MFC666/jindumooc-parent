<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.jindumooc.dao.XapiStatementArchiveMapper" >
  <resultMap id="BaseResultMap" type="com.jindumooc.pojo.XapiStatementArchive" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="uuid" property="uuid" jdbcType="VARCHAR" />
    <result column="version" property="version" jdbcType="VARCHAR" />
    <result column="push_time" property="pushTime" jdbcType="INTEGER" />
    <result column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="verb" property="verb" jdbcType="VARCHAR" />
    <result column="target_id" property="targetId" jdbcType="INTEGER" />
    <result column="target_type" property="targetType" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="VARCHAR" />
    <result column="occur_time" property="occurTime" jdbcType="INTEGER" />
    <result column="created_time" property="createdTime" jdbcType="INTEGER" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.jindumooc.pojo.XapiStatementArchive" extends="BaseResultMap" >
    <result column="data" property="data" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, uuid, version, push_time, user_id, verb, target_id, target_type, status, occur_time, 
    created_time
  </sql>
  <sql id="Blob_Column_List" >
    data
  </sql>
  <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs" parameterType="com.jindumooc.pojo.XapiStatementArchiveExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from xapi_statement_archive
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.jindumooc.pojo.XapiStatementArchiveExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from xapi_statement_archive
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from xapi_statement_archive
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from xapi_statement_archive
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.jindumooc.pojo.XapiStatementArchiveExample" >
    delete from xapi_statement_archive
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.jindumooc.pojo.XapiStatementArchive" >
    insert into xapi_statement_archive (id, uuid, version, 
      push_time, user_id, verb, 
      target_id, target_type, status, 
      occur_time, created_time, data
      )
    values (#{id,jdbcType=INTEGER}, #{uuid,jdbcType=VARCHAR}, #{version,jdbcType=VARCHAR}, 
      #{pushTime,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{verb,jdbcType=VARCHAR}, 
      #{targetId,jdbcType=INTEGER}, #{targetType,jdbcType=VARCHAR}, #{status,jdbcType=VARCHAR}, 
      #{occurTime,jdbcType=INTEGER}, #{createdTime,jdbcType=INTEGER}, #{data,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.jindumooc.pojo.XapiStatementArchive" >
    insert into xapi_statement_archive
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="uuid != null" >
        uuid,
      </if>
      <if test="version != null" >
        version,
      </if>
      <if test="pushTime != null" >
        push_time,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="verb != null" >
        verb,
      </if>
      <if test="targetId != null" >
        target_id,
      </if>
      <if test="targetType != null" >
        target_type,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="occurTime != null" >
        occur_time,
      </if>
      <if test="createdTime != null" >
        created_time,
      </if>
      <if test="data != null" >
        data,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="uuid != null" >
        #{uuid,jdbcType=VARCHAR},
      </if>
      <if test="version != null" >
        #{version,jdbcType=VARCHAR},
      </if>
      <if test="pushTime != null" >
        #{pushTime,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="verb != null" >
        #{verb,jdbcType=VARCHAR},
      </if>
      <if test="targetId != null" >
        #{targetId,jdbcType=INTEGER},
      </if>
      <if test="targetType != null" >
        #{targetType,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        #{status,jdbcType=VARCHAR},
      </if>
      <if test="occurTime != null" >
        #{occurTime,jdbcType=INTEGER},
      </if>
      <if test="createdTime != null" >
        #{createdTime,jdbcType=INTEGER},
      </if>
      <if test="data != null" >
        #{data,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.jindumooc.pojo.XapiStatementArchiveExample" resultType="java.lang.Integer" >
    select count(*) from xapi_statement_archive
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update xapi_statement_archive
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.uuid != null" >
        uuid = #{record.uuid,jdbcType=VARCHAR},
      </if>
      <if test="record.version != null" >
        version = #{record.version,jdbcType=VARCHAR},
      </if>
      <if test="record.pushTime != null" >
        push_time = #{record.pushTime,jdbcType=INTEGER},
      </if>
      <if test="record.userId != null" >
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.verb != null" >
        verb = #{record.verb,jdbcType=VARCHAR},
      </if>
      <if test="record.targetId != null" >
        target_id = #{record.targetId,jdbcType=INTEGER},
      </if>
      <if test="record.targetType != null" >
        target_type = #{record.targetType,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null" >
        status = #{record.status,jdbcType=VARCHAR},
      </if>
      <if test="record.occurTime != null" >
        occur_time = #{record.occurTime,jdbcType=INTEGER},
      </if>
      <if test="record.createdTime != null" >
        created_time = #{record.createdTime,jdbcType=INTEGER},
      </if>
      <if test="record.data != null" >
        data = #{record.data,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map" >
    update xapi_statement_archive
    set id = #{record.id,jdbcType=INTEGER},
      uuid = #{record.uuid,jdbcType=VARCHAR},
      version = #{record.version,jdbcType=VARCHAR},
      push_time = #{record.pushTime,jdbcType=INTEGER},
      user_id = #{record.userId,jdbcType=INTEGER},
      verb = #{record.verb,jdbcType=VARCHAR},
      target_id = #{record.targetId,jdbcType=INTEGER},
      target_type = #{record.targetType,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=VARCHAR},
      occur_time = #{record.occurTime,jdbcType=INTEGER},
      created_time = #{record.createdTime,jdbcType=INTEGER},
      data = #{record.data,jdbcType=LONGVARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update xapi_statement_archive
    set id = #{record.id,jdbcType=INTEGER},
      uuid = #{record.uuid,jdbcType=VARCHAR},
      version = #{record.version,jdbcType=VARCHAR},
      push_time = #{record.pushTime,jdbcType=INTEGER},
      user_id = #{record.userId,jdbcType=INTEGER},
      verb = #{record.verb,jdbcType=VARCHAR},
      target_id = #{record.targetId,jdbcType=INTEGER},
      target_type = #{record.targetType,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=VARCHAR},
      occur_time = #{record.occurTime,jdbcType=INTEGER},
      created_time = #{record.createdTime,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.jindumooc.pojo.XapiStatementArchive" >
    update xapi_statement_archive
    <set >
      <if test="uuid != null" >
        uuid = #{uuid,jdbcType=VARCHAR},
      </if>
      <if test="version != null" >
        version = #{version,jdbcType=VARCHAR},
      </if>
      <if test="pushTime != null" >
        push_time = #{pushTime,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="verb != null" >
        verb = #{verb,jdbcType=VARCHAR},
      </if>
      <if test="targetId != null" >
        target_id = #{targetId,jdbcType=INTEGER},
      </if>
      <if test="targetType != null" >
        target_type = #{targetType,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=VARCHAR},
      </if>
      <if test="occurTime != null" >
        occur_time = #{occurTime,jdbcType=INTEGER},
      </if>
      <if test="createdTime != null" >
        created_time = #{createdTime,jdbcType=INTEGER},
      </if>
      <if test="data != null" >
        data = #{data,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.jindumooc.pojo.XapiStatementArchive" >
    update xapi_statement_archive
    set uuid = #{uuid,jdbcType=VARCHAR},
      version = #{version,jdbcType=VARCHAR},
      push_time = #{pushTime,jdbcType=INTEGER},
      user_id = #{userId,jdbcType=INTEGER},
      verb = #{verb,jdbcType=VARCHAR},
      target_id = #{targetId,jdbcType=INTEGER},
      target_type = #{targetType,jdbcType=VARCHAR},
      status = #{status,jdbcType=VARCHAR},
      occur_time = #{occurTime,jdbcType=INTEGER},
      created_time = #{createdTime,jdbcType=INTEGER},
      data = #{data,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.jindumooc.pojo.XapiStatementArchive" >
    update xapi_statement_archive
    set uuid = #{uuid,jdbcType=VARCHAR},
      version = #{version,jdbcType=VARCHAR},
      push_time = #{pushTime,jdbcType=INTEGER},
      user_id = #{userId,jdbcType=INTEGER},
      verb = #{verb,jdbcType=VARCHAR},
      target_id = #{targetId,jdbcType=INTEGER},
      target_type = #{targetType,jdbcType=VARCHAR},
      status = #{status,jdbcType=VARCHAR},
      occur_time = #{occurTime,jdbcType=INTEGER},
      created_time = #{createdTime,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>