<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.jindumooc.dao.BizOnlineMapper" >
  <resultMap id="BaseResultMap" type="com.jindumooc.pojo.BizOnline" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="active_time" property="activeTime" jdbcType="INTEGER" />
    <result column="deadline" property="deadline" jdbcType="INTEGER" />
    <result column="is_login" property="isLogin" jdbcType="BIT" />
    <result column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="ip" property="ip" jdbcType="VARCHAR" />
    <result column="user_agent" property="userAgent" jdbcType="VARCHAR" />
    <result column="source" property="source" jdbcType="VARCHAR" />
    <result column="created_time" property="createdTime" jdbcType="INTEGER" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.jindumooc.pojo.BizOnline" extends="BaseResultMap" >
    <result column="sess_id" property="sessId" jdbcType="VARBINARY" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, active_time, deadline, is_login, user_id, ip, user_agent, source, created_time
  </sql>
  <sql id="Blob_Column_List" >
    sess_id
  </sql>
  <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs" parameterType="com.jindumooc.pojo.BizOnlineExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from biz_online
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.jindumooc.pojo.BizOnlineExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from biz_online
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from biz_online
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from biz_online
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.jindumooc.pojo.BizOnlineExample" >
    delete from biz_online
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.jindumooc.pojo.BizOnline" >
    insert into biz_online (id, active_time, deadline, 
      is_login, user_id, ip, user_agent, 
      source, created_time, sess_id
      )
    values (#{id,jdbcType=INTEGER}, #{activeTime,jdbcType=INTEGER}, #{deadline,jdbcType=INTEGER}, 
      #{isLogin,jdbcType=BIT}, #{userId,jdbcType=INTEGER}, #{ip,jdbcType=VARCHAR}, #{userAgent,jdbcType=VARCHAR}, 
      #{source,jdbcType=VARCHAR}, #{createdTime,jdbcType=INTEGER}, #{sessId,jdbcType=VARBINARY}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.jindumooc.pojo.BizOnline" >
    insert into biz_online
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="activeTime != null" >
        active_time,
      </if>
      <if test="deadline != null" >
        deadline,
      </if>
      <if test="isLogin != null" >
        is_login,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="ip != null" >
        ip,
      </if>
      <if test="userAgent != null" >
        user_agent,
      </if>
      <if test="source != null" >
        source,
      </if>
      <if test="createdTime != null" >
        created_time,
      </if>
      <if test="sessId != null" >
        sess_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="activeTime != null" >
        #{activeTime,jdbcType=INTEGER},
      </if>
      <if test="deadline != null" >
        #{deadline,jdbcType=INTEGER},
      </if>
      <if test="isLogin != null" >
        #{isLogin,jdbcType=BIT},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="ip != null" >
        #{ip,jdbcType=VARCHAR},
      </if>
      <if test="userAgent != null" >
        #{userAgent,jdbcType=VARCHAR},
      </if>
      <if test="source != null" >
        #{source,jdbcType=VARCHAR},
      </if>
      <if test="createdTime != null" >
        #{createdTime,jdbcType=INTEGER},
      </if>
      <if test="sessId != null" >
        #{sessId,jdbcType=VARBINARY},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.jindumooc.pojo.BizOnlineExample" resultType="java.lang.Integer" >
    select count(*) from biz_online
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update biz_online
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.activeTime != null" >
        active_time = #{record.activeTime,jdbcType=INTEGER},
      </if>
      <if test="record.deadline != null" >
        deadline = #{record.deadline,jdbcType=INTEGER},
      </if>
      <if test="record.isLogin != null" >
        is_login = #{record.isLogin,jdbcType=BIT},
      </if>
      <if test="record.userId != null" >
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.ip != null" >
        ip = #{record.ip,jdbcType=VARCHAR},
      </if>
      <if test="record.userAgent != null" >
        user_agent = #{record.userAgent,jdbcType=VARCHAR},
      </if>
      <if test="record.source != null" >
        source = #{record.source,jdbcType=VARCHAR},
      </if>
      <if test="record.createdTime != null" >
        created_time = #{record.createdTime,jdbcType=INTEGER},
      </if>
      <if test="record.sessId != null" >
        sess_id = #{record.sessId,jdbcType=VARBINARY},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map" >
    update biz_online
    set id = #{record.id,jdbcType=INTEGER},
      active_time = #{record.activeTime,jdbcType=INTEGER},
      deadline = #{record.deadline,jdbcType=INTEGER},
      is_login = #{record.isLogin,jdbcType=BIT},
      user_id = #{record.userId,jdbcType=INTEGER},
      ip = #{record.ip,jdbcType=VARCHAR},
      user_agent = #{record.userAgent,jdbcType=VARCHAR},
      source = #{record.source,jdbcType=VARCHAR},
      created_time = #{record.createdTime,jdbcType=INTEGER},
      sess_id = #{record.sessId,jdbcType=VARBINARY}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update biz_online
    set id = #{record.id,jdbcType=INTEGER},
      active_time = #{record.activeTime,jdbcType=INTEGER},
      deadline = #{record.deadline,jdbcType=INTEGER},
      is_login = #{record.isLogin,jdbcType=BIT},
      user_id = #{record.userId,jdbcType=INTEGER},
      ip = #{record.ip,jdbcType=VARCHAR},
      user_agent = #{record.userAgent,jdbcType=VARCHAR},
      source = #{record.source,jdbcType=VARCHAR},
      created_time = #{record.createdTime,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.jindumooc.pojo.BizOnline" >
    update biz_online
    <set >
      <if test="activeTime != null" >
        active_time = #{activeTime,jdbcType=INTEGER},
      </if>
      <if test="deadline != null" >
        deadline = #{deadline,jdbcType=INTEGER},
      </if>
      <if test="isLogin != null" >
        is_login = #{isLogin,jdbcType=BIT},
      </if>
      <if test="userId != null" >
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="ip != null" >
        ip = #{ip,jdbcType=VARCHAR},
      </if>
      <if test="userAgent != null" >
        user_agent = #{userAgent,jdbcType=VARCHAR},
      </if>
      <if test="source != null" >
        source = #{source,jdbcType=VARCHAR},
      </if>
      <if test="createdTime != null" >
        created_time = #{createdTime,jdbcType=INTEGER},
      </if>
      <if test="sessId != null" >
        sess_id = #{sessId,jdbcType=VARBINARY},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.jindumooc.pojo.BizOnline" >
    update biz_online
    set active_time = #{activeTime,jdbcType=INTEGER},
      deadline = #{deadline,jdbcType=INTEGER},
      is_login = #{isLogin,jdbcType=BIT},
      user_id = #{userId,jdbcType=INTEGER},
      ip = #{ip,jdbcType=VARCHAR},
      user_agent = #{userAgent,jdbcType=VARCHAR},
      source = #{source,jdbcType=VARCHAR},
      created_time = #{createdTime,jdbcType=INTEGER},
      sess_id = #{sessId,jdbcType=VARBINARY}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.jindumooc.pojo.BizOnline" >
    update biz_online
    set active_time = #{activeTime,jdbcType=INTEGER},
      deadline = #{deadline,jdbcType=INTEGER},
      is_login = #{isLogin,jdbcType=BIT},
      user_id = #{userId,jdbcType=INTEGER},
      ip = #{ip,jdbcType=VARCHAR},
      user_agent = #{userAgent,jdbcType=VARCHAR},
      source = #{source,jdbcType=VARCHAR},
      created_time = #{createdTime,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>