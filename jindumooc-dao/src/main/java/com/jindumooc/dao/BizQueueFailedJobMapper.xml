<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.jindumooc.dao.BizQueueFailedJobMapper" >
  <resultMap id="BaseResultMap" type="com.jindumooc.pojo.BizQueueFailedJob" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="queue" property="queue" jdbcType="VARCHAR" />
    <result column="classes" property="classes" jdbcType="VARCHAR" />
    <result column="timeout" property="timeout" jdbcType="INTEGER" />
    <result column="priority" property="priority" jdbcType="INTEGER" />
    <result column="failed_time" property="failedTime" jdbcType="INTEGER" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.jindumooc.pojo.BizQueueFailedJobWithBLOBs" extends="BaseResultMap" >
    <result column="body" property="body" jdbcType="LONGVARCHAR" />
    <result column="reason" property="reason" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, queue, classes, timeout, priority, failed_time
  </sql>
  <sql id="Blob_Column_List" >
    body, reason
  </sql>
  <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs" parameterType="com.jindumooc.pojo.BizQueueFailedJobExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from biz_queue_failed_job
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.jindumooc.pojo.BizQueueFailedJobExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from biz_queue_failed_job
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from biz_queue_failed_job
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from biz_queue_failed_job
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.jindumooc.pojo.BizQueueFailedJobExample" >
    delete from biz_queue_failed_job
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.jindumooc.pojo.BizQueueFailedJobWithBLOBs" >
    insert into biz_queue_failed_job (id, queue, classes, 
      timeout, priority, failed_time, 
      body, reason)
    values (#{id,jdbcType=BIGINT}, #{queue,jdbcType=VARCHAR}, #{classes,jdbcType=VARCHAR}, 
      #{timeout,jdbcType=INTEGER}, #{priority,jdbcType=INTEGER}, #{failedTime,jdbcType=INTEGER}, 
      #{body,jdbcType=LONGVARCHAR}, #{reason,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.jindumooc.pojo.BizQueueFailedJobWithBLOBs" >
    insert into biz_queue_failed_job
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="queue != null" >
        queue,
      </if>
      <if test="classes != null" >
        classes,
      </if>
      <if test="timeout != null" >
        timeout,
      </if>
      <if test="priority != null" >
        priority,
      </if>
      <if test="failedTime != null" >
        failed_time,
      </if>
      <if test="body != null" >
        body,
      </if>
      <if test="reason != null" >
        reason,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="queue != null" >
        #{queue,jdbcType=VARCHAR},
      </if>
      <if test="classes != null" >
        #{classes,jdbcType=VARCHAR},
      </if>
      <if test="timeout != null" >
        #{timeout,jdbcType=INTEGER},
      </if>
      <if test="priority != null" >
        #{priority,jdbcType=INTEGER},
      </if>
      <if test="failedTime != null" >
        #{failedTime,jdbcType=INTEGER},
      </if>
      <if test="body != null" >
        #{body,jdbcType=LONGVARCHAR},
      </if>
      <if test="reason != null" >
        #{reason,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.jindumooc.pojo.BizQueueFailedJobExample" resultType="java.lang.Integer" >
    select count(*) from biz_queue_failed_job
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update biz_queue_failed_job
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.queue != null" >
        queue = #{record.queue,jdbcType=VARCHAR},
      </if>
      <if test="record.classes != null" >
        classes = #{record.classes,jdbcType=VARCHAR},
      </if>
      <if test="record.timeout != null" >
        timeout = #{record.timeout,jdbcType=INTEGER},
      </if>
      <if test="record.priority != null" >
        priority = #{record.priority,jdbcType=INTEGER},
      </if>
      <if test="record.failedTime != null" >
        failed_time = #{record.failedTime,jdbcType=INTEGER},
      </if>
      <if test="record.body != null" >
        body = #{record.body,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.reason != null" >
        reason = #{record.reason,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map" >
    update biz_queue_failed_job
    set id = #{record.id,jdbcType=BIGINT},
      queue = #{record.queue,jdbcType=VARCHAR},
      classes = #{record.classes,jdbcType=VARCHAR},
      timeout = #{record.timeout,jdbcType=INTEGER},
      priority = #{record.priority,jdbcType=INTEGER},
      failed_time = #{record.failedTime,jdbcType=INTEGER},
      body = #{record.body,jdbcType=LONGVARCHAR},
      reason = #{record.reason,jdbcType=LONGVARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update biz_queue_failed_job
    set id = #{record.id,jdbcType=BIGINT},
      queue = #{record.queue,jdbcType=VARCHAR},
      classes = #{record.classes,jdbcType=VARCHAR},
      timeout = #{record.timeout,jdbcType=INTEGER},
      priority = #{record.priority,jdbcType=INTEGER},
      failed_time = #{record.failedTime,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.jindumooc.pojo.BizQueueFailedJobWithBLOBs" >
    update biz_queue_failed_job
    <set >
      <if test="queue != null" >
        queue = #{queue,jdbcType=VARCHAR},
      </if>
      <if test="classes != null" >
        classes = #{classes,jdbcType=VARCHAR},
      </if>
      <if test="timeout != null" >
        timeout = #{timeout,jdbcType=INTEGER},
      </if>
      <if test="priority != null" >
        priority = #{priority,jdbcType=INTEGER},
      </if>
      <if test="failedTime != null" >
        failed_time = #{failedTime,jdbcType=INTEGER},
      </if>
      <if test="body != null" >
        body = #{body,jdbcType=LONGVARCHAR},
      </if>
      <if test="reason != null" >
        reason = #{reason,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.jindumooc.pojo.BizQueueFailedJobWithBLOBs" >
    update biz_queue_failed_job
    set queue = #{queue,jdbcType=VARCHAR},
      classes = #{classes,jdbcType=VARCHAR},
      timeout = #{timeout,jdbcType=INTEGER},
      priority = #{priority,jdbcType=INTEGER},
      failed_time = #{failedTime,jdbcType=INTEGER},
      body = #{body,jdbcType=LONGVARCHAR},
      reason = #{reason,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.jindumooc.pojo.BizQueueFailedJob" >
    update biz_queue_failed_job
    set queue = #{queue,jdbcType=VARCHAR},
      classes = #{classes,jdbcType=VARCHAR},
      timeout = #{timeout,jdbcType=INTEGER},
      priority = #{priority,jdbcType=INTEGER},
      failed_time = #{failedTime,jdbcType=INTEGER}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>