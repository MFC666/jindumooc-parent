<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.jindumooc.dao.CouponMapper" >
  <resultMap id="BaseResultMap" type="com.jindumooc.pojo.Coupon" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="code" property="code" jdbcType="VARCHAR" />
    <result column="type" property="type" jdbcType="CHAR" />
    <result column="status" property="status" jdbcType="CHAR" />
    <result column="rate" property="rate" jdbcType="REAL" />
    <result column="batchId" property="batchid" jdbcType="INTEGER" />
    <result column="userId" property="userid" jdbcType="INTEGER" />
    <result column="deadline" property="deadline" jdbcType="INTEGER" />
    <result column="targetType" property="targettype" jdbcType="VARCHAR" />
    <result column="targetId" property="targetid" jdbcType="INTEGER" />
    <result column="orderId" property="orderid" jdbcType="INTEGER" />
    <result column="orderTime" property="ordertime" jdbcType="INTEGER" />
    <result column="createdTime" property="createdtime" jdbcType="INTEGER" />
    <result column="receiveTime" property="receivetime" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, code, type, status, rate, batchId, userId, deadline, targetType, targetId, orderId, 
    orderTime, createdTime, receiveTime
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.jindumooc.pojo.CouponExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from coupon
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from coupon
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from coupon
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.jindumooc.pojo.CouponExample" >
    delete from coupon
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.jindumooc.pojo.Coupon" >
    insert into coupon (id, code, type, 
      status, rate, batchId, userId, 
      deadline, targetType, targetId, 
      orderId, orderTime, createdTime, 
      receiveTime)
    values (#{id,jdbcType=INTEGER}, #{code,jdbcType=VARCHAR}, #{type,jdbcType=CHAR}, 
      #{status,jdbcType=CHAR}, #{rate,jdbcType=REAL}, #{batchid,jdbcType=INTEGER}, #{userid,jdbcType=INTEGER}, 
      #{deadline,jdbcType=INTEGER}, #{targettype,jdbcType=VARCHAR}, #{targetid,jdbcType=INTEGER}, 
      #{orderid,jdbcType=INTEGER}, #{ordertime,jdbcType=INTEGER}, #{createdtime,jdbcType=INTEGER}, 
      #{receivetime,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.jindumooc.pojo.Coupon" >
    insert into coupon
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="code != null" >
        code,
      </if>
      <if test="type != null" >
        type,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="rate != null" >
        rate,
      </if>
      <if test="batchid != null" >
        batchId,
      </if>
      <if test="userid != null" >
        userId,
      </if>
      <if test="deadline != null" >
        deadline,
      </if>
      <if test="targettype != null" >
        targetType,
      </if>
      <if test="targetid != null" >
        targetId,
      </if>
      <if test="orderid != null" >
        orderId,
      </if>
      <if test="ordertime != null" >
        orderTime,
      </if>
      <if test="createdtime != null" >
        createdTime,
      </if>
      <if test="receivetime != null" >
        receiveTime,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="code != null" >
        #{code,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        #{type,jdbcType=CHAR},
      </if>
      <if test="status != null" >
        #{status,jdbcType=CHAR},
      </if>
      <if test="rate != null" >
        #{rate,jdbcType=REAL},
      </if>
      <if test="batchid != null" >
        #{batchid,jdbcType=INTEGER},
      </if>
      <if test="userid != null" >
        #{userid,jdbcType=INTEGER},
      </if>
      <if test="deadline != null" >
        #{deadline,jdbcType=INTEGER},
      </if>
      <if test="targettype != null" >
        #{targettype,jdbcType=VARCHAR},
      </if>
      <if test="targetid != null" >
        #{targetid,jdbcType=INTEGER},
      </if>
      <if test="orderid != null" >
        #{orderid,jdbcType=INTEGER},
      </if>
      <if test="ordertime != null" >
        #{ordertime,jdbcType=INTEGER},
      </if>
      <if test="createdtime != null" >
        #{createdtime,jdbcType=INTEGER},
      </if>
      <if test="receivetime != null" >
        #{receivetime,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.jindumooc.pojo.CouponExample" resultType="java.lang.Integer" >
    select count(*) from coupon
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update coupon
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.code != null" >
        code = #{record.code,jdbcType=VARCHAR},
      </if>
      <if test="record.type != null" >
        type = #{record.type,jdbcType=CHAR},
      </if>
      <if test="record.status != null" >
        status = #{record.status,jdbcType=CHAR},
      </if>
      <if test="record.rate != null" >
        rate = #{record.rate,jdbcType=REAL},
      </if>
      <if test="record.batchid != null" >
        batchId = #{record.batchid,jdbcType=INTEGER},
      </if>
      <if test="record.userid != null" >
        userId = #{record.userid,jdbcType=INTEGER},
      </if>
      <if test="record.deadline != null" >
        deadline = #{record.deadline,jdbcType=INTEGER},
      </if>
      <if test="record.targettype != null" >
        targetType = #{record.targettype,jdbcType=VARCHAR},
      </if>
      <if test="record.targetid != null" >
        targetId = #{record.targetid,jdbcType=INTEGER},
      </if>
      <if test="record.orderid != null" >
        orderId = #{record.orderid,jdbcType=INTEGER},
      </if>
      <if test="record.ordertime != null" >
        orderTime = #{record.ordertime,jdbcType=INTEGER},
      </if>
      <if test="record.createdtime != null" >
        createdTime = #{record.createdtime,jdbcType=INTEGER},
      </if>
      <if test="record.receivetime != null" >
        receiveTime = #{record.receivetime,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update coupon
    set id = #{record.id,jdbcType=INTEGER},
      code = #{record.code,jdbcType=VARCHAR},
      type = #{record.type,jdbcType=CHAR},
      status = #{record.status,jdbcType=CHAR},
      rate = #{record.rate,jdbcType=REAL},
      batchId = #{record.batchid,jdbcType=INTEGER},
      userId = #{record.userid,jdbcType=INTEGER},
      deadline = #{record.deadline,jdbcType=INTEGER},
      targetType = #{record.targettype,jdbcType=VARCHAR},
      targetId = #{record.targetid,jdbcType=INTEGER},
      orderId = #{record.orderid,jdbcType=INTEGER},
      orderTime = #{record.ordertime,jdbcType=INTEGER},
      createdTime = #{record.createdtime,jdbcType=INTEGER},
      receiveTime = #{record.receivetime,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.jindumooc.pojo.Coupon" >
    update coupon
    <set >
      <if test="code != null" >
        code = #{code,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        type = #{type,jdbcType=CHAR},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=CHAR},
      </if>
      <if test="rate != null" >
        rate = #{rate,jdbcType=REAL},
      </if>
      <if test="batchid != null" >
        batchId = #{batchid,jdbcType=INTEGER},
      </if>
      <if test="userid != null" >
        userId = #{userid,jdbcType=INTEGER},
      </if>
      <if test="deadline != null" >
        deadline = #{deadline,jdbcType=INTEGER},
      </if>
      <if test="targettype != null" >
        targetType = #{targettype,jdbcType=VARCHAR},
      </if>
      <if test="targetid != null" >
        targetId = #{targetid,jdbcType=INTEGER},
      </if>
      <if test="orderid != null" >
        orderId = #{orderid,jdbcType=INTEGER},
      </if>
      <if test="ordertime != null" >
        orderTime = #{ordertime,jdbcType=INTEGER},
      </if>
      <if test="createdtime != null" >
        createdTime = #{createdtime,jdbcType=INTEGER},
      </if>
      <if test="receivetime != null" >
        receiveTime = #{receivetime,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.jindumooc.pojo.Coupon" >
    update coupon
    set code = #{code,jdbcType=VARCHAR},
      type = #{type,jdbcType=CHAR},
      status = #{status,jdbcType=CHAR},
      rate = #{rate,jdbcType=REAL},
      batchId = #{batchid,jdbcType=INTEGER},
      userId = #{userid,jdbcType=INTEGER},
      deadline = #{deadline,jdbcType=INTEGER},
      targetType = #{targettype,jdbcType=VARCHAR},
      targetId = #{targetid,jdbcType=INTEGER},
      orderId = #{orderid,jdbcType=INTEGER},
      orderTime = #{ordertime,jdbcType=INTEGER},
      createdTime = #{createdtime,jdbcType=INTEGER},
      receiveTime = #{receivetime,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>