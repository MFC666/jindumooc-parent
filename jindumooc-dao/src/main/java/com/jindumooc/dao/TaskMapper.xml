<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.jindumooc.dao.TaskMapper" >
  <resultMap id="BaseResultMap" type="com.jindumooc.pojo.Task" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="title" property="title" jdbcType="VARCHAR" />
    <result column="userId" property="userid" jdbcType="INTEGER" />
    <result column="taskType" property="tasktype" jdbcType="VARCHAR" />
    <result column="batchId" property="batchid" jdbcType="INTEGER" />
    <result column="targetId" property="targetid" jdbcType="INTEGER" />
    <result column="targetType" property="targettype" jdbcType="VARCHAR" />
    <result column="taskStartTime" property="taskstarttime" jdbcType="INTEGER" />
    <result column="taskEndTime" property="taskendtime" jdbcType="INTEGER" />
    <result column="intervalDate" property="intervaldate" jdbcType="SMALLINT" />
    <result column="status" property="status" jdbcType="CHAR" />
    <result column="required" property="required" jdbcType="BIT" />
    <result column="completedTime" property="completedtime" jdbcType="INTEGER" />
    <result column="createdTime" property="createdtime" jdbcType="INTEGER" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.jindumooc.pojo.TaskWithBLOBs" extends="BaseResultMap" >
    <result column="description" property="description" jdbcType="LONGVARCHAR" />
    <result column="meta" property="meta" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, title, userId, taskType, batchId, targetId, targetType, taskStartTime, taskEndTime, 
    intervalDate, status, required, completedTime, createdTime
  </sql>
  <sql id="Blob_Column_List" >
    description, meta
  </sql>
  <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs" parameterType="com.jindumooc.pojo.TaskExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from task
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.jindumooc.pojo.TaskExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from task
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from task
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from task
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.jindumooc.pojo.TaskExample" >
    delete from task
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.jindumooc.pojo.TaskWithBLOBs" >
    insert into task (id, title, userId, 
      taskType, batchId, targetId, 
      targetType, taskStartTime, taskEndTime, 
      intervalDate, status, required, 
      completedTime, createdTime, description, 
      meta)
    values (#{id,jdbcType=INTEGER}, #{title,jdbcType=VARCHAR}, #{userid,jdbcType=INTEGER}, 
      #{tasktype,jdbcType=VARCHAR}, #{batchid,jdbcType=INTEGER}, #{targetid,jdbcType=INTEGER}, 
      #{targettype,jdbcType=VARCHAR}, #{taskstarttime,jdbcType=INTEGER}, #{taskendtime,jdbcType=INTEGER}, 
      #{intervaldate,jdbcType=SMALLINT}, #{status,jdbcType=CHAR}, #{required,jdbcType=BIT}, 
      #{completedtime,jdbcType=INTEGER}, #{createdtime,jdbcType=INTEGER}, #{description,jdbcType=LONGVARCHAR}, 
      #{meta,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.jindumooc.pojo.TaskWithBLOBs" >
    insert into task
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="title != null" >
        title,
      </if>
      <if test="userid != null" >
        userId,
      </if>
      <if test="tasktype != null" >
        taskType,
      </if>
      <if test="batchid != null" >
        batchId,
      </if>
      <if test="targetid != null" >
        targetId,
      </if>
      <if test="targettype != null" >
        targetType,
      </if>
      <if test="taskstarttime != null" >
        taskStartTime,
      </if>
      <if test="taskendtime != null" >
        taskEndTime,
      </if>
      <if test="intervaldate != null" >
        intervalDate,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="required != null" >
        required,
      </if>
      <if test="completedtime != null" >
        completedTime,
      </if>
      <if test="createdtime != null" >
        createdTime,
      </if>
      <if test="description != null" >
        description,
      </if>
      <if test="meta != null" >
        meta,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="title != null" >
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="userid != null" >
        #{userid,jdbcType=INTEGER},
      </if>
      <if test="tasktype != null" >
        #{tasktype,jdbcType=VARCHAR},
      </if>
      <if test="batchid != null" >
        #{batchid,jdbcType=INTEGER},
      </if>
      <if test="targetid != null" >
        #{targetid,jdbcType=INTEGER},
      </if>
      <if test="targettype != null" >
        #{targettype,jdbcType=VARCHAR},
      </if>
      <if test="taskstarttime != null" >
        #{taskstarttime,jdbcType=INTEGER},
      </if>
      <if test="taskendtime != null" >
        #{taskendtime,jdbcType=INTEGER},
      </if>
      <if test="intervaldate != null" >
        #{intervaldate,jdbcType=SMALLINT},
      </if>
      <if test="status != null" >
        #{status,jdbcType=CHAR},
      </if>
      <if test="required != null" >
        #{required,jdbcType=BIT},
      </if>
      <if test="completedtime != null" >
        #{completedtime,jdbcType=INTEGER},
      </if>
      <if test="createdtime != null" >
        #{createdtime,jdbcType=INTEGER},
      </if>
      <if test="description != null" >
        #{description,jdbcType=LONGVARCHAR},
      </if>
      <if test="meta != null" >
        #{meta,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.jindumooc.pojo.TaskExample" resultType="java.lang.Integer" >
    select count(*) from task
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update task
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.title != null" >
        title = #{record.title,jdbcType=VARCHAR},
      </if>
      <if test="record.userid != null" >
        userId = #{record.userid,jdbcType=INTEGER},
      </if>
      <if test="record.tasktype != null" >
        taskType = #{record.tasktype,jdbcType=VARCHAR},
      </if>
      <if test="record.batchid != null" >
        batchId = #{record.batchid,jdbcType=INTEGER},
      </if>
      <if test="record.targetid != null" >
        targetId = #{record.targetid,jdbcType=INTEGER},
      </if>
      <if test="record.targettype != null" >
        targetType = #{record.targettype,jdbcType=VARCHAR},
      </if>
      <if test="record.taskstarttime != null" >
        taskStartTime = #{record.taskstarttime,jdbcType=INTEGER},
      </if>
      <if test="record.taskendtime != null" >
        taskEndTime = #{record.taskendtime,jdbcType=INTEGER},
      </if>
      <if test="record.intervaldate != null" >
        intervalDate = #{record.intervaldate,jdbcType=SMALLINT},
      </if>
      <if test="record.status != null" >
        status = #{record.status,jdbcType=CHAR},
      </if>
      <if test="record.required != null" >
        required = #{record.required,jdbcType=BIT},
      </if>
      <if test="record.completedtime != null" >
        completedTime = #{record.completedtime,jdbcType=INTEGER},
      </if>
      <if test="record.createdtime != null" >
        createdTime = #{record.createdtime,jdbcType=INTEGER},
      </if>
      <if test="record.description != null" >
        description = #{record.description,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.meta != null" >
        meta = #{record.meta,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map" >
    update task
    set id = #{record.id,jdbcType=INTEGER},
      title = #{record.title,jdbcType=VARCHAR},
      userId = #{record.userid,jdbcType=INTEGER},
      taskType = #{record.tasktype,jdbcType=VARCHAR},
      batchId = #{record.batchid,jdbcType=INTEGER},
      targetId = #{record.targetid,jdbcType=INTEGER},
      targetType = #{record.targettype,jdbcType=VARCHAR},
      taskStartTime = #{record.taskstarttime,jdbcType=INTEGER},
      taskEndTime = #{record.taskendtime,jdbcType=INTEGER},
      intervalDate = #{record.intervaldate,jdbcType=SMALLINT},
      status = #{record.status,jdbcType=CHAR},
      required = #{record.required,jdbcType=BIT},
      completedTime = #{record.completedtime,jdbcType=INTEGER},
      createdTime = #{record.createdtime,jdbcType=INTEGER},
      description = #{record.description,jdbcType=LONGVARCHAR},
      meta = #{record.meta,jdbcType=LONGVARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update task
    set id = #{record.id,jdbcType=INTEGER},
      title = #{record.title,jdbcType=VARCHAR},
      userId = #{record.userid,jdbcType=INTEGER},
      taskType = #{record.tasktype,jdbcType=VARCHAR},
      batchId = #{record.batchid,jdbcType=INTEGER},
      targetId = #{record.targetid,jdbcType=INTEGER},
      targetType = #{record.targettype,jdbcType=VARCHAR},
      taskStartTime = #{record.taskstarttime,jdbcType=INTEGER},
      taskEndTime = #{record.taskendtime,jdbcType=INTEGER},
      intervalDate = #{record.intervaldate,jdbcType=SMALLINT},
      status = #{record.status,jdbcType=CHAR},
      required = #{record.required,jdbcType=BIT},
      completedTime = #{record.completedtime,jdbcType=INTEGER},
      createdTime = #{record.createdtime,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.jindumooc.pojo.TaskWithBLOBs" >
    update task
    <set >
      <if test="title != null" >
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="userid != null" >
        userId = #{userid,jdbcType=INTEGER},
      </if>
      <if test="tasktype != null" >
        taskType = #{tasktype,jdbcType=VARCHAR},
      </if>
      <if test="batchid != null" >
        batchId = #{batchid,jdbcType=INTEGER},
      </if>
      <if test="targetid != null" >
        targetId = #{targetid,jdbcType=INTEGER},
      </if>
      <if test="targettype != null" >
        targetType = #{targettype,jdbcType=VARCHAR},
      </if>
      <if test="taskstarttime != null" >
        taskStartTime = #{taskstarttime,jdbcType=INTEGER},
      </if>
      <if test="taskendtime != null" >
        taskEndTime = #{taskendtime,jdbcType=INTEGER},
      </if>
      <if test="intervaldate != null" >
        intervalDate = #{intervaldate,jdbcType=SMALLINT},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=CHAR},
      </if>
      <if test="required != null" >
        required = #{required,jdbcType=BIT},
      </if>
      <if test="completedtime != null" >
        completedTime = #{completedtime,jdbcType=INTEGER},
      </if>
      <if test="createdtime != null" >
        createdTime = #{createdtime,jdbcType=INTEGER},
      </if>
      <if test="description != null" >
        description = #{description,jdbcType=LONGVARCHAR},
      </if>
      <if test="meta != null" >
        meta = #{meta,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.jindumooc.pojo.TaskWithBLOBs" >
    update task
    set title = #{title,jdbcType=VARCHAR},
      userId = #{userid,jdbcType=INTEGER},
      taskType = #{tasktype,jdbcType=VARCHAR},
      batchId = #{batchid,jdbcType=INTEGER},
      targetId = #{targetid,jdbcType=INTEGER},
      targetType = #{targettype,jdbcType=VARCHAR},
      taskStartTime = #{taskstarttime,jdbcType=INTEGER},
      taskEndTime = #{taskendtime,jdbcType=INTEGER},
      intervalDate = #{intervaldate,jdbcType=SMALLINT},
      status = #{status,jdbcType=CHAR},
      required = #{required,jdbcType=BIT},
      completedTime = #{completedtime,jdbcType=INTEGER},
      createdTime = #{createdtime,jdbcType=INTEGER},
      description = #{description,jdbcType=LONGVARCHAR},
      meta = #{meta,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.jindumooc.pojo.Task" >
    update task
    set title = #{title,jdbcType=VARCHAR},
      userId = #{userid,jdbcType=INTEGER},
      taskType = #{tasktype,jdbcType=VARCHAR},
      batchId = #{batchid,jdbcType=INTEGER},
      targetId = #{targetid,jdbcType=INTEGER},
      targetType = #{targettype,jdbcType=VARCHAR},
      taskStartTime = #{taskstarttime,jdbcType=INTEGER},
      taskEndTime = #{taskendtime,jdbcType=INTEGER},
      intervalDate = #{intervaldate,jdbcType=SMALLINT},
      status = #{status,jdbcType=CHAR},
      required = #{required,jdbcType=BIT},
      completedTime = #{completedtime,jdbcType=INTEGER},
      createdTime = #{createdtime,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>