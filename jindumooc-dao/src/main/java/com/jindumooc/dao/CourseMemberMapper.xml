<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.jindumooc.dao.CourseMemberMapper" >
  <resultMap id="BaseResultMap" type="com.jindumooc.pojo.CourseMember" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="courseId" property="courseid" jdbcType="INTEGER" />
    <result column="classroomId" property="classroomid" jdbcType="INTEGER" />
    <result column="joinedType" property="joinedtype" jdbcType="CHAR" />
    <result column="userId" property="userid" jdbcType="INTEGER" />
    <result column="orderId" property="orderid" jdbcType="INTEGER" />
    <result column="deadline" property="deadline" jdbcType="INTEGER" />
    <result column="refundDeadline" property="refunddeadline" jdbcType="INTEGER" />
    <result column="levelId" property="levelid" jdbcType="INTEGER" />
    <result column="learnedNum" property="learnednum" jdbcType="INTEGER" />
    <result column="learnedCompulsoryTaskNum" property="learnedcompulsorytasknum" jdbcType="INTEGER" />
    <result column="credit" property="credit" jdbcType="INTEGER" />
    <result column="noteNum" property="notenum" jdbcType="INTEGER" />
    <result column="noteLastUpdateTime" property="notelastupdatetime" jdbcType="INTEGER" />
    <result column="isLearned" property="islearned" jdbcType="TINYINT" />
    <result column="finishedTime" property="finishedtime" jdbcType="INTEGER" />
    <result column="seq" property="seq" jdbcType="INTEGER" />
    <result column="remark" property="remark" jdbcType="VARCHAR" />
    <result column="isVisible" property="isvisible" jdbcType="TINYINT" />
    <result column="role" property="role" jdbcType="CHAR" />
    <result column="locked" property="locked" jdbcType="TINYINT" />
    <result column="deadlineNotified" property="deadlinenotified" jdbcType="INTEGER" />
    <result column="createdTime" property="createdtime" jdbcType="INTEGER" />
    <result column="lastLearnTime" property="lastlearntime" jdbcType="INTEGER" />
    <result column="updatedTime" property="updatedtime" jdbcType="INTEGER" />
    <result column="lastViewTime" property="lastviewtime" jdbcType="INTEGER" />
    <result column="courseSetId" property="coursesetid" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, courseId, classroomId, joinedType, userId, orderId, deadline, refundDeadline, 
    levelId, learnedNum, learnedCompulsoryTaskNum, credit, noteNum, noteLastUpdateTime, 
    isLearned, finishedTime, seq, remark, isVisible, role, locked, deadlineNotified, 
    createdTime, lastLearnTime, updatedTime, lastViewTime, courseSetId
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.jindumooc.pojo.CourseMemberExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from course_member
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from course_member
    where id = #{id,jdbcType=INTEGER}
  </select>

  <!--通过课程Id选取-->
  <select id="selectByClassroomId" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select
    <include refid="Base_Column_List" />
    from course_member
    where classroomId = #{id,jdbcType=INTEGER}
  </select>
  <!--计算用户参与课程总数-->
  <select id="selectCourseCount" resultType="java.lang.Integer" parameterType="java.lang.Integer" >
    select count(*)
    from course_member
    where userId = #{id,jdbcType=INTEGER}
  </select>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from course_member
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.jindumooc.pojo.CourseMemberExample" >
    delete from course_member
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.jindumooc.pojo.CourseMember" >
    insert into course_member (id, courseId, classroomId, 
      joinedType, userId, orderId, 
      deadline, refundDeadline, levelId, 
      learnedNum, learnedCompulsoryTaskNum, credit, 
      noteNum, noteLastUpdateTime, isLearned, 
      finishedTime, seq, remark, 
      isVisible, role, locked, 
      deadlineNotified, createdTime, lastLearnTime, 
      updatedTime, lastViewTime, courseSetId
      )
    values (#{id,jdbcType=INTEGER}, #{courseid,jdbcType=INTEGER}, #{classroomid,jdbcType=INTEGER}, 
      #{joinedtype,jdbcType=CHAR}, #{userid,jdbcType=INTEGER}, #{orderid,jdbcType=INTEGER}, 
      #{deadline,jdbcType=INTEGER}, #{refunddeadline,jdbcType=INTEGER}, #{levelid,jdbcType=INTEGER}, 
      #{learnednum,jdbcType=INTEGER}, #{learnedcompulsorytasknum,jdbcType=INTEGER}, #{credit,jdbcType=INTEGER}, 
      #{notenum,jdbcType=INTEGER}, #{notelastupdatetime,jdbcType=INTEGER}, #{islearned,jdbcType=TINYINT}, 
      #{finishedtime,jdbcType=INTEGER}, #{seq,jdbcType=INTEGER}, #{remark,jdbcType=VARCHAR}, 
      #{isvisible,jdbcType=TINYINT}, #{role,jdbcType=CHAR}, #{locked,jdbcType=TINYINT}, 
      #{deadlinenotified,jdbcType=INTEGER}, #{createdtime,jdbcType=INTEGER}, #{lastlearntime,jdbcType=INTEGER}, 
      #{updatedtime,jdbcType=INTEGER}, #{lastviewtime,jdbcType=INTEGER}, #{coursesetid,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.jindumooc.pojo.CourseMember" >
    insert into course_member
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="courseid != null" >
        courseId,
      </if>
      <if test="classroomid != null" >
        classroomId,
      </if>
      <if test="joinedtype != null" >
        joinedType,
      </if>
      <if test="userid != null" >
        userId,
      </if>
      <if test="orderid != null" >
        orderId,
      </if>
      <if test="deadline != null" >
        deadline,
      </if>
      <if test="refunddeadline != null" >
        refundDeadline,
      </if>
      <if test="levelid != null" >
        levelId,
      </if>
      <if test="learnednum != null" >
        learnedNum,
      </if>
      <if test="learnedcompulsorytasknum != null" >
        learnedCompulsoryTaskNum,
      </if>
      <if test="credit != null" >
        credit,
      </if>
      <if test="notenum != null" >
        noteNum,
      </if>
      <if test="notelastupdatetime != null" >
        noteLastUpdateTime,
      </if>
      <if test="islearned != null" >
        isLearned,
      </if>
      <if test="finishedtime != null" >
        finishedTime,
      </if>
      <if test="seq != null" >
        seq,
      </if>
      <if test="remark != null" >
        remark,
      </if>
      <if test="isvisible != null" >
        isVisible,
      </if>
      <if test="role != null" >
        role,
      </if>
      <if test="locked != null" >
        locked,
      </if>
      <if test="deadlinenotified != null" >
        deadlineNotified,
      </if>
      <if test="createdtime != null" >
        createdTime,
      </if>
      <if test="lastlearntime != null" >
        lastLearnTime,
      </if>
      <if test="updatedtime != null" >
        updatedTime,
      </if>
      <if test="lastviewtime != null" >
        lastViewTime,
      </if>
      <if test="coursesetid != null" >
        courseSetId,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="courseid != null" >
        #{courseid,jdbcType=INTEGER},
      </if>
      <if test="classroomid != null" >
        #{classroomid,jdbcType=INTEGER},
      </if>
      <if test="joinedtype != null" >
        #{joinedtype,jdbcType=CHAR},
      </if>
      <if test="userid != null" >
        #{userid,jdbcType=INTEGER},
      </if>
      <if test="orderid != null" >
        #{orderid,jdbcType=INTEGER},
      </if>
      <if test="deadline != null" >
        #{deadline,jdbcType=INTEGER},
      </if>
      <if test="refunddeadline != null" >
        #{refunddeadline,jdbcType=INTEGER},
      </if>
      <if test="levelid != null" >
        #{levelid,jdbcType=INTEGER},
      </if>
      <if test="learnednum != null" >
        #{learnednum,jdbcType=INTEGER},
      </if>
      <if test="learnedcompulsorytasknum != null" >
        #{learnedcompulsorytasknum,jdbcType=INTEGER},
      </if>
      <if test="credit != null" >
        #{credit,jdbcType=INTEGER},
      </if>
      <if test="notenum != null" >
        #{notenum,jdbcType=INTEGER},
      </if>
      <if test="notelastupdatetime != null" >
        #{notelastupdatetime,jdbcType=INTEGER},
      </if>
      <if test="islearned != null" >
        #{islearned,jdbcType=TINYINT},
      </if>
      <if test="finishedtime != null" >
        #{finishedtime,jdbcType=INTEGER},
      </if>
      <if test="seq != null" >
        #{seq,jdbcType=INTEGER},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="isvisible != null" >
        #{isvisible,jdbcType=TINYINT},
      </if>
      <if test="role != null" >
        #{role,jdbcType=CHAR},
      </if>
      <if test="locked != null" >
        #{locked,jdbcType=TINYINT},
      </if>
      <if test="deadlinenotified != null" >
        #{deadlinenotified,jdbcType=INTEGER},
      </if>
      <if test="createdtime != null" >
        #{createdtime,jdbcType=INTEGER},
      </if>
      <if test="lastlearntime != null" >
        #{lastlearntime,jdbcType=INTEGER},
      </if>
      <if test="updatedtime != null" >
        #{updatedtime,jdbcType=INTEGER},
      </if>
      <if test="lastviewtime != null" >
        #{lastviewtime,jdbcType=INTEGER},
      </if>
      <if test="coursesetid != null" >
        #{coursesetid,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.jindumooc.pojo.CourseMemberExample" resultType="java.lang.Integer" >
    select count(*) from course_member
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update course_member
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.courseid != null" >
        courseId = #{record.courseid,jdbcType=INTEGER},
      </if>
      <if test="record.classroomid != null" >
        classroomId = #{record.classroomid,jdbcType=INTEGER},
      </if>
      <if test="record.joinedtype != null" >
        joinedType = #{record.joinedtype,jdbcType=CHAR},
      </if>
      <if test="record.userid != null" >
        userId = #{record.userid,jdbcType=INTEGER},
      </if>
      <if test="record.orderid != null" >
        orderId = #{record.orderid,jdbcType=INTEGER},
      </if>
      <if test="record.deadline != null" >
        deadline = #{record.deadline,jdbcType=INTEGER},
      </if>
      <if test="record.refunddeadline != null" >
        refundDeadline = #{record.refunddeadline,jdbcType=INTEGER},
      </if>
      <if test="record.levelid != null" >
        levelId = #{record.levelid,jdbcType=INTEGER},
      </if>
      <if test="record.learnednum != null" >
        learnedNum = #{record.learnednum,jdbcType=INTEGER},
      </if>
      <if test="record.learnedcompulsorytasknum != null" >
        learnedCompulsoryTaskNum = #{record.learnedcompulsorytasknum,jdbcType=INTEGER},
      </if>
      <if test="record.credit != null" >
        credit = #{record.credit,jdbcType=INTEGER},
      </if>
      <if test="record.notenum != null" >
        noteNum = #{record.notenum,jdbcType=INTEGER},
      </if>
      <if test="record.notelastupdatetime != null" >
        noteLastUpdateTime = #{record.notelastupdatetime,jdbcType=INTEGER},
      </if>
      <if test="record.islearned != null" >
        isLearned = #{record.islearned,jdbcType=TINYINT},
      </if>
      <if test="record.finishedtime != null" >
        finishedTime = #{record.finishedtime,jdbcType=INTEGER},
      </if>
      <if test="record.seq != null" >
        seq = #{record.seq,jdbcType=INTEGER},
      </if>
      <if test="record.remark != null" >
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
      <if test="record.isvisible != null" >
        isVisible = #{record.isvisible,jdbcType=TINYINT},
      </if>
      <if test="record.role != null" >
        role = #{record.role,jdbcType=CHAR},
      </if>
      <if test="record.locked != null" >
        locked = #{record.locked,jdbcType=TINYINT},
      </if>
      <if test="record.deadlinenotified != null" >
        deadlineNotified = #{record.deadlinenotified,jdbcType=INTEGER},
      </if>
      <if test="record.createdtime != null" >
        createdTime = #{record.createdtime,jdbcType=INTEGER},
      </if>
      <if test="record.lastlearntime != null" >
        lastLearnTime = #{record.lastlearntime,jdbcType=INTEGER},
      </if>
      <if test="record.updatedtime != null" >
        updatedTime = #{record.updatedtime,jdbcType=INTEGER},
      </if>
      <if test="record.lastviewtime != null" >
        lastViewTime = #{record.lastviewtime,jdbcType=INTEGER},
      </if>
      <if test="record.coursesetid != null" >
        courseSetId = #{record.coursesetid,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update course_member
    set id = #{record.id,jdbcType=INTEGER},
      courseId = #{record.courseid,jdbcType=INTEGER},
      classroomId = #{record.classroomid,jdbcType=INTEGER},
      joinedType = #{record.joinedtype,jdbcType=CHAR},
      userId = #{record.userid,jdbcType=INTEGER},
      orderId = #{record.orderid,jdbcType=INTEGER},
      deadline = #{record.deadline,jdbcType=INTEGER},
      refundDeadline = #{record.refunddeadline,jdbcType=INTEGER},
      levelId = #{record.levelid,jdbcType=INTEGER},
      learnedNum = #{record.learnednum,jdbcType=INTEGER},
      learnedCompulsoryTaskNum = #{record.learnedcompulsorytasknum,jdbcType=INTEGER},
      credit = #{record.credit,jdbcType=INTEGER},
      noteNum = #{record.notenum,jdbcType=INTEGER},
      noteLastUpdateTime = #{record.notelastupdatetime,jdbcType=INTEGER},
      isLearned = #{record.islearned,jdbcType=TINYINT},
      finishedTime = #{record.finishedtime,jdbcType=INTEGER},
      seq = #{record.seq,jdbcType=INTEGER},
      remark = #{record.remark,jdbcType=VARCHAR},
      isVisible = #{record.isvisible,jdbcType=TINYINT},
      role = #{record.role,jdbcType=CHAR},
      locked = #{record.locked,jdbcType=TINYINT},
      deadlineNotified = #{record.deadlinenotified,jdbcType=INTEGER},
      createdTime = #{record.createdtime,jdbcType=INTEGER},
      lastLearnTime = #{record.lastlearntime,jdbcType=INTEGER},
      updatedTime = #{record.updatedtime,jdbcType=INTEGER},
      lastViewTime = #{record.lastviewtime,jdbcType=INTEGER},
      courseSetId = #{record.coursesetid,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.jindumooc.pojo.CourseMember" >
    update course_member
    <set >
      <if test="courseid != null" >
        courseId = #{courseid,jdbcType=INTEGER},
      </if>
      <if test="classroomid != null" >
        classroomId = #{classroomid,jdbcType=INTEGER},
      </if>
      <if test="joinedtype != null" >
        joinedType = #{joinedtype,jdbcType=CHAR},
      </if>
      <if test="userid != null" >
        userId = #{userid,jdbcType=INTEGER},
      </if>
      <if test="orderid != null" >
        orderId = #{orderid,jdbcType=INTEGER},
      </if>
      <if test="deadline != null" >
        deadline = #{deadline,jdbcType=INTEGER},
      </if>
      <if test="refunddeadline != null" >
        refundDeadline = #{refunddeadline,jdbcType=INTEGER},
      </if>
      <if test="levelid != null" >
        levelId = #{levelid,jdbcType=INTEGER},
      </if>
      <if test="learnednum != null" >
        learnedNum = #{learnednum,jdbcType=INTEGER},
      </if>
      <if test="learnedcompulsorytasknum != null" >
        learnedCompulsoryTaskNum = #{learnedcompulsorytasknum,jdbcType=INTEGER},
      </if>
      <if test="credit != null" >
        credit = #{credit,jdbcType=INTEGER},
      </if>
      <if test="notenum != null" >
        noteNum = #{notenum,jdbcType=INTEGER},
      </if>
      <if test="notelastupdatetime != null" >
        noteLastUpdateTime = #{notelastupdatetime,jdbcType=INTEGER},
      </if>
      <if test="islearned != null" >
        isLearned = #{islearned,jdbcType=TINYINT},
      </if>
      <if test="finishedtime != null" >
        finishedTime = #{finishedtime,jdbcType=INTEGER},
      </if>
      <if test="seq != null" >
        seq = #{seq,jdbcType=INTEGER},
      </if>
      <if test="remark != null" >
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="isvisible != null" >
        isVisible = #{isvisible,jdbcType=TINYINT},
      </if>
      <if test="role != null" >
        role = #{role,jdbcType=CHAR},
      </if>
      <if test="locked != null" >
        locked = #{locked,jdbcType=TINYINT},
      </if>
      <if test="deadlinenotified != null" >
        deadlineNotified = #{deadlinenotified,jdbcType=INTEGER},
      </if>
      <if test="createdtime != null" >
        createdTime = #{createdtime,jdbcType=INTEGER},
      </if>
      <if test="lastlearntime != null" >
        lastLearnTime = #{lastlearntime,jdbcType=INTEGER},
      </if>
      <if test="updatedtime != null" >
        updatedTime = #{updatedtime,jdbcType=INTEGER},
      </if>
      <if test="lastviewtime != null" >
        lastViewTime = #{lastviewtime,jdbcType=INTEGER},
      </if>
      <if test="coursesetid != null" >
        courseSetId = #{coursesetid,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.jindumooc.pojo.CourseMember" >
    update course_member
    set courseId = #{courseid,jdbcType=INTEGER},
      classroomId = #{classroomid,jdbcType=INTEGER},
      joinedType = #{joinedtype,jdbcType=CHAR},
      userId = #{userid,jdbcType=INTEGER},
      orderId = #{orderid,jdbcType=INTEGER},
      deadline = #{deadline,jdbcType=INTEGER},
      refundDeadline = #{refunddeadline,jdbcType=INTEGER},
      levelId = #{levelid,jdbcType=INTEGER},
      learnedNum = #{learnednum,jdbcType=INTEGER},
      learnedCompulsoryTaskNum = #{learnedcompulsorytasknum,jdbcType=INTEGER},
      credit = #{credit,jdbcType=INTEGER},
      noteNum = #{notenum,jdbcType=INTEGER},
      noteLastUpdateTime = #{notelastupdatetime,jdbcType=INTEGER},
      isLearned = #{islearned,jdbcType=TINYINT},
      finishedTime = #{finishedtime,jdbcType=INTEGER},
      seq = #{seq,jdbcType=INTEGER},
      remark = #{remark,jdbcType=VARCHAR},
      isVisible = #{isvisible,jdbcType=TINYINT},
      role = #{role,jdbcType=CHAR},
      locked = #{locked,jdbcType=TINYINT},
      deadlineNotified = #{deadlinenotified,jdbcType=INTEGER},
      createdTime = #{createdtime,jdbcType=INTEGER},
      lastLearnTime = #{lastlearntime,jdbcType=INTEGER},
      updatedTime = #{updatedtime,jdbcType=INTEGER},
      lastViewTime = #{lastviewtime,jdbcType=INTEGER},
      courseSetId = #{coursesetid,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>