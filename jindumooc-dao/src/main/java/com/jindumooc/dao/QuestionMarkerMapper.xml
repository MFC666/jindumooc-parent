<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.jindumooc.dao.QuestionMarkerMapper" >
  <resultMap id="BaseResultMap" type="com.jindumooc.pojo.QuestionMarker" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="markerId" property="markerid" jdbcType="INTEGER" />
    <result column="questionId" property="questionid" jdbcType="INTEGER" />
    <result column="seq" property="seq" jdbcType="INTEGER" />
    <result column="type" property="type" jdbcType="VARCHAR" />
    <result column="difficulty" property="difficulty" jdbcType="VARCHAR" />
    <result column="createdTime" property="createdtime" jdbcType="INTEGER" />
    <result column="updatedTime" property="updatedtime" jdbcType="INTEGER" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.jindumooc.pojo.QuestionMarkerWithBLOBs" extends="BaseResultMap" >
    <result column="stem" property="stem" jdbcType="LONGVARCHAR" />
    <result column="answer" property="answer" jdbcType="LONGVARCHAR" />
    <result column="analysis" property="analysis" jdbcType="LONGVARCHAR" />
    <result column="metas" property="metas" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, markerId, questionId, seq, type, difficulty, createdTime, updatedTime
  </sql>
  <sql id="Blob_Column_List" >
    stem, answer, analysis, metas
  </sql>
  <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs" parameterType="com.jindumooc.pojo.QuestionMarkerExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from question_marker
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.jindumooc.pojo.QuestionMarkerExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from question_marker
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from question_marker
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from question_marker
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.jindumooc.pojo.QuestionMarkerExample" >
    delete from question_marker
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.jindumooc.pojo.QuestionMarkerWithBLOBs" >
    insert into question_marker (id, markerId, questionId, 
      seq, type, difficulty, 
      createdTime, updatedTime, stem, 
      answer, analysis, metas
      )
    values (#{id,jdbcType=INTEGER}, #{markerid,jdbcType=INTEGER}, #{questionid,jdbcType=INTEGER}, 
      #{seq,jdbcType=INTEGER}, #{type,jdbcType=VARCHAR}, #{difficulty,jdbcType=VARCHAR}, 
      #{createdtime,jdbcType=INTEGER}, #{updatedtime,jdbcType=INTEGER}, #{stem,jdbcType=LONGVARCHAR}, 
      #{answer,jdbcType=LONGVARCHAR}, #{analysis,jdbcType=LONGVARCHAR}, #{metas,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.jindumooc.pojo.QuestionMarkerWithBLOBs" >
    insert into question_marker
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="markerid != null" >
        markerId,
      </if>
      <if test="questionid != null" >
        questionId,
      </if>
      <if test="seq != null" >
        seq,
      </if>
      <if test="type != null" >
        type,
      </if>
      <if test="difficulty != null" >
        difficulty,
      </if>
      <if test="createdtime != null" >
        createdTime,
      </if>
      <if test="updatedtime != null" >
        updatedTime,
      </if>
      <if test="stem != null" >
        stem,
      </if>
      <if test="answer != null" >
        answer,
      </if>
      <if test="analysis != null" >
        analysis,
      </if>
      <if test="metas != null" >
        metas,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="markerid != null" >
        #{markerid,jdbcType=INTEGER},
      </if>
      <if test="questionid != null" >
        #{questionid,jdbcType=INTEGER},
      </if>
      <if test="seq != null" >
        #{seq,jdbcType=INTEGER},
      </if>
      <if test="type != null" >
        #{type,jdbcType=VARCHAR},
      </if>
      <if test="difficulty != null" >
        #{difficulty,jdbcType=VARCHAR},
      </if>
      <if test="createdtime != null" >
        #{createdtime,jdbcType=INTEGER},
      </if>
      <if test="updatedtime != null" >
        #{updatedtime,jdbcType=INTEGER},
      </if>
      <if test="stem != null" >
        #{stem,jdbcType=LONGVARCHAR},
      </if>
      <if test="answer != null" >
        #{answer,jdbcType=LONGVARCHAR},
      </if>
      <if test="analysis != null" >
        #{analysis,jdbcType=LONGVARCHAR},
      </if>
      <if test="metas != null" >
        #{metas,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.jindumooc.pojo.QuestionMarkerExample" resultType="java.lang.Integer" >
    select count(*) from question_marker
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update question_marker
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.markerid != null" >
        markerId = #{record.markerid,jdbcType=INTEGER},
      </if>
      <if test="record.questionid != null" >
        questionId = #{record.questionid,jdbcType=INTEGER},
      </if>
      <if test="record.seq != null" >
        seq = #{record.seq,jdbcType=INTEGER},
      </if>
      <if test="record.type != null" >
        type = #{record.type,jdbcType=VARCHAR},
      </if>
      <if test="record.difficulty != null" >
        difficulty = #{record.difficulty,jdbcType=VARCHAR},
      </if>
      <if test="record.createdtime != null" >
        createdTime = #{record.createdtime,jdbcType=INTEGER},
      </if>
      <if test="record.updatedtime != null" >
        updatedTime = #{record.updatedtime,jdbcType=INTEGER},
      </if>
      <if test="record.stem != null" >
        stem = #{record.stem,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.answer != null" >
        answer = #{record.answer,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.analysis != null" >
        analysis = #{record.analysis,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.metas != null" >
        metas = #{record.metas,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map" >
    update question_marker
    set id = #{record.id,jdbcType=INTEGER},
      markerId = #{record.markerid,jdbcType=INTEGER},
      questionId = #{record.questionid,jdbcType=INTEGER},
      seq = #{record.seq,jdbcType=INTEGER},
      type = #{record.type,jdbcType=VARCHAR},
      difficulty = #{record.difficulty,jdbcType=VARCHAR},
      createdTime = #{record.createdtime,jdbcType=INTEGER},
      updatedTime = #{record.updatedtime,jdbcType=INTEGER},
      stem = #{record.stem,jdbcType=LONGVARCHAR},
      answer = #{record.answer,jdbcType=LONGVARCHAR},
      analysis = #{record.analysis,jdbcType=LONGVARCHAR},
      metas = #{record.metas,jdbcType=LONGVARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update question_marker
    set id = #{record.id,jdbcType=INTEGER},
      markerId = #{record.markerid,jdbcType=INTEGER},
      questionId = #{record.questionid,jdbcType=INTEGER},
      seq = #{record.seq,jdbcType=INTEGER},
      type = #{record.type,jdbcType=VARCHAR},
      difficulty = #{record.difficulty,jdbcType=VARCHAR},
      createdTime = #{record.createdtime,jdbcType=INTEGER},
      updatedTime = #{record.updatedtime,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.jindumooc.pojo.QuestionMarkerWithBLOBs" >
    update question_marker
    <set >
      <if test="markerid != null" >
        markerId = #{markerid,jdbcType=INTEGER},
      </if>
      <if test="questionid != null" >
        questionId = #{questionid,jdbcType=INTEGER},
      </if>
      <if test="seq != null" >
        seq = #{seq,jdbcType=INTEGER},
      </if>
      <if test="type != null" >
        type = #{type,jdbcType=VARCHAR},
      </if>
      <if test="difficulty != null" >
        difficulty = #{difficulty,jdbcType=VARCHAR},
      </if>
      <if test="createdtime != null" >
        createdTime = #{createdtime,jdbcType=INTEGER},
      </if>
      <if test="updatedtime != null" >
        updatedTime = #{updatedtime,jdbcType=INTEGER},
      </if>
      <if test="stem != null" >
        stem = #{stem,jdbcType=LONGVARCHAR},
      </if>
      <if test="answer != null" >
        answer = #{answer,jdbcType=LONGVARCHAR},
      </if>
      <if test="analysis != null" >
        analysis = #{analysis,jdbcType=LONGVARCHAR},
      </if>
      <if test="metas != null" >
        metas = #{metas,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.jindumooc.pojo.QuestionMarkerWithBLOBs" >
    update question_marker
    set markerId = #{markerid,jdbcType=INTEGER},
      questionId = #{questionid,jdbcType=INTEGER},
      seq = #{seq,jdbcType=INTEGER},
      type = #{type,jdbcType=VARCHAR},
      difficulty = #{difficulty,jdbcType=VARCHAR},
      createdTime = #{createdtime,jdbcType=INTEGER},
      updatedTime = #{updatedtime,jdbcType=INTEGER},
      stem = #{stem,jdbcType=LONGVARCHAR},
      answer = #{answer,jdbcType=LONGVARCHAR},
      analysis = #{analysis,jdbcType=LONGVARCHAR},
      metas = #{metas,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.jindumooc.pojo.QuestionMarker" >
    update question_marker
    set markerId = #{markerid,jdbcType=INTEGER},
      questionId = #{questionid,jdbcType=INTEGER},
      seq = #{seq,jdbcType=INTEGER},
      type = #{type,jdbcType=VARCHAR},
      difficulty = #{difficulty,jdbcType=VARCHAR},
      createdTime = #{createdtime,jdbcType=INTEGER},
      updatedTime = #{updatedtime,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>