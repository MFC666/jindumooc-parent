<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.jindumooc.dao.BizTokenMapper" >
  <resultMap id="BaseResultMap" type="com.jindumooc.pojo.BizToken" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="place" property="place" jdbcType="VARCHAR" />
    <result column="_key" property="key" jdbcType="VARCHAR" />
    <result column="expired_time" property="expiredTime" jdbcType="INTEGER" />
    <result column="times" property="times" jdbcType="INTEGER" />
    <result column="remaining_times" property="remainingTimes" jdbcType="INTEGER" />
    <result column="created_time" property="createdTime" jdbcType="INTEGER" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.jindumooc.pojo.BizToken" extends="BaseResultMap" >
    <result column="data" property="data" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, place, _key, expired_time, times, remaining_times, created_time
  </sql>
  <sql id="Blob_Column_List" >
    data
  </sql>
  <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs" parameterType="com.jindumooc.pojo.BizTokenExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from biz_token
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.jindumooc.pojo.BizTokenExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from biz_token
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from biz_token
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from biz_token
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.jindumooc.pojo.BizTokenExample" >
    delete from biz_token
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.jindumooc.pojo.BizToken" >
    insert into biz_token (id, place, _key, 
      expired_time, times, remaining_times, 
      created_time, data)
    values (#{id,jdbcType=INTEGER}, #{place,jdbcType=VARCHAR}, #{key,jdbcType=VARCHAR}, 
      #{expiredTime,jdbcType=INTEGER}, #{times,jdbcType=INTEGER}, #{remainingTimes,jdbcType=INTEGER}, 
      #{createdTime,jdbcType=INTEGER}, #{data,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.jindumooc.pojo.BizToken" >
    insert into biz_token
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="place != null" >
        place,
      </if>
      <if test="key != null" >
        _key,
      </if>
      <if test="expiredTime != null" >
        expired_time,
      </if>
      <if test="times != null" >
        times,
      </if>
      <if test="remainingTimes != null" >
        remaining_times,
      </if>
      <if test="createdTime != null" >
        created_time,
      </if>
      <if test="data != null" >
        data,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="place != null" >
        #{place,jdbcType=VARCHAR},
      </if>
      <if test="key != null" >
        #{key,jdbcType=VARCHAR},
      </if>
      <if test="expiredTime != null" >
        #{expiredTime,jdbcType=INTEGER},
      </if>
      <if test="times != null" >
        #{times,jdbcType=INTEGER},
      </if>
      <if test="remainingTimes != null" >
        #{remainingTimes,jdbcType=INTEGER},
      </if>
      <if test="createdTime != null" >
        #{createdTime,jdbcType=INTEGER},
      </if>
      <if test="data != null" >
        #{data,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.jindumooc.pojo.BizTokenExample" resultType="java.lang.Integer" >
    select count(*) from biz_token
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update biz_token
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.place != null" >
        place = #{record.place,jdbcType=VARCHAR},
      </if>
      <if test="record.key != null" >
        _key = #{record.key,jdbcType=VARCHAR},
      </if>
      <if test="record.expiredTime != null" >
        expired_time = #{record.expiredTime,jdbcType=INTEGER},
      </if>
      <if test="record.times != null" >
        times = #{record.times,jdbcType=INTEGER},
      </if>
      <if test="record.remainingTimes != null" >
        remaining_times = #{record.remainingTimes,jdbcType=INTEGER},
      </if>
      <if test="record.createdTime != null" >
        created_time = #{record.createdTime,jdbcType=INTEGER},
      </if>
      <if test="record.data != null" >
        data = #{record.data,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map" >
    update biz_token
    set id = #{record.id,jdbcType=INTEGER},
      place = #{record.place,jdbcType=VARCHAR},
      _key = #{record.key,jdbcType=VARCHAR},
      expired_time = #{record.expiredTime,jdbcType=INTEGER},
      times = #{record.times,jdbcType=INTEGER},
      remaining_times = #{record.remainingTimes,jdbcType=INTEGER},
      created_time = #{record.createdTime,jdbcType=INTEGER},
      data = #{record.data,jdbcType=LONGVARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update biz_token
    set id = #{record.id,jdbcType=INTEGER},
      place = #{record.place,jdbcType=VARCHAR},
      _key = #{record.key,jdbcType=VARCHAR},
      expired_time = #{record.expiredTime,jdbcType=INTEGER},
      times = #{record.times,jdbcType=INTEGER},
      remaining_times = #{record.remainingTimes,jdbcType=INTEGER},
      created_time = #{record.createdTime,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.jindumooc.pojo.BizToken" >
    update biz_token
    <set >
      <if test="place != null" >
        place = #{place,jdbcType=VARCHAR},
      </if>
      <if test="key != null" >
        _key = #{key,jdbcType=VARCHAR},
      </if>
      <if test="expiredTime != null" >
        expired_time = #{expiredTime,jdbcType=INTEGER},
      </if>
      <if test="times != null" >
        times = #{times,jdbcType=INTEGER},
      </if>
      <if test="remainingTimes != null" >
        remaining_times = #{remainingTimes,jdbcType=INTEGER},
      </if>
      <if test="createdTime != null" >
        created_time = #{createdTime,jdbcType=INTEGER},
      </if>
      <if test="data != null" >
        data = #{data,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.jindumooc.pojo.BizToken" >
    update biz_token
    set place = #{place,jdbcType=VARCHAR},
      _key = #{key,jdbcType=VARCHAR},
      expired_time = #{expiredTime,jdbcType=INTEGER},
      times = #{times,jdbcType=INTEGER},
      remaining_times = #{remainingTimes,jdbcType=INTEGER},
      created_time = #{createdTime,jdbcType=INTEGER},
      data = #{data,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.jindumooc.pojo.BizToken" >
    update biz_token
    set place = #{place,jdbcType=VARCHAR},
      _key = #{key,jdbcType=VARCHAR},
      expired_time = #{expiredTime,jdbcType=INTEGER},
      times = #{times,jdbcType=INTEGER},
      remaining_times = #{remainingTimes,jdbcType=INTEGER},
      created_time = #{createdTime,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>