<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.jindumooc.dao.OrderRefererLogMapper" >
  <resultMap id="BaseResultMap" type="com.jindumooc.pojo.OrderRefererLog" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="refererLogId" property="refererlogid" jdbcType="INTEGER" />
    <result column="orderId" property="orderid" jdbcType="INTEGER" />
    <result column="sourceTargetId" property="sourcetargetid" jdbcType="INTEGER" />
    <result column="sourceTargetType" property="sourcetargettype" jdbcType="VARCHAR" />
    <result column="targetType" property="targettype" jdbcType="VARCHAR" />
    <result column="targetId" property="targetid" jdbcType="INTEGER" />
    <result column="createdTime" property="createdtime" jdbcType="INTEGER" />
    <result column="createdUserId" property="createduserid" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, refererLogId, orderId, sourceTargetId, sourceTargetType, targetType, targetId, 
    createdTime, createdUserId
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.jindumooc.pojo.OrderRefererLogExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from order_referer_log
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from order_referer_log
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from order_referer_log
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.jindumooc.pojo.OrderRefererLogExample" >
    delete from order_referer_log
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.jindumooc.pojo.OrderRefererLog" >
    insert into order_referer_log (id, refererLogId, orderId, 
      sourceTargetId, sourceTargetType, targetType, 
      targetId, createdTime, createdUserId
      )
    values (#{id,jdbcType=INTEGER}, #{refererlogid,jdbcType=INTEGER}, #{orderid,jdbcType=INTEGER}, 
      #{sourcetargetid,jdbcType=INTEGER}, #{sourcetargettype,jdbcType=VARCHAR}, #{targettype,jdbcType=VARCHAR}, 
      #{targetid,jdbcType=INTEGER}, #{createdtime,jdbcType=INTEGER}, #{createduserid,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.jindumooc.pojo.OrderRefererLog" >
    insert into order_referer_log
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="refererlogid != null" >
        refererLogId,
      </if>
      <if test="orderid != null" >
        orderId,
      </if>
      <if test="sourcetargetid != null" >
        sourceTargetId,
      </if>
      <if test="sourcetargettype != null" >
        sourceTargetType,
      </if>
      <if test="targettype != null" >
        targetType,
      </if>
      <if test="targetid != null" >
        targetId,
      </if>
      <if test="createdtime != null" >
        createdTime,
      </if>
      <if test="createduserid != null" >
        createdUserId,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="refererlogid != null" >
        #{refererlogid,jdbcType=INTEGER},
      </if>
      <if test="orderid != null" >
        #{orderid,jdbcType=INTEGER},
      </if>
      <if test="sourcetargetid != null" >
        #{sourcetargetid,jdbcType=INTEGER},
      </if>
      <if test="sourcetargettype != null" >
        #{sourcetargettype,jdbcType=VARCHAR},
      </if>
      <if test="targettype != null" >
        #{targettype,jdbcType=VARCHAR},
      </if>
      <if test="targetid != null" >
        #{targetid,jdbcType=INTEGER},
      </if>
      <if test="createdtime != null" >
        #{createdtime,jdbcType=INTEGER},
      </if>
      <if test="createduserid != null" >
        #{createduserid,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.jindumooc.pojo.OrderRefererLogExample" resultType="java.lang.Integer" >
    select count(*) from order_referer_log
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update order_referer_log
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.refererlogid != null" >
        refererLogId = #{record.refererlogid,jdbcType=INTEGER},
      </if>
      <if test="record.orderid != null" >
        orderId = #{record.orderid,jdbcType=INTEGER},
      </if>
      <if test="record.sourcetargetid != null" >
        sourceTargetId = #{record.sourcetargetid,jdbcType=INTEGER},
      </if>
      <if test="record.sourcetargettype != null" >
        sourceTargetType = #{record.sourcetargettype,jdbcType=VARCHAR},
      </if>
      <if test="record.targettype != null" >
        targetType = #{record.targettype,jdbcType=VARCHAR},
      </if>
      <if test="record.targetid != null" >
        targetId = #{record.targetid,jdbcType=INTEGER},
      </if>
      <if test="record.createdtime != null" >
        createdTime = #{record.createdtime,jdbcType=INTEGER},
      </if>
      <if test="record.createduserid != null" >
        createdUserId = #{record.createduserid,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update order_referer_log
    set id = #{record.id,jdbcType=INTEGER},
      refererLogId = #{record.refererlogid,jdbcType=INTEGER},
      orderId = #{record.orderid,jdbcType=INTEGER},
      sourceTargetId = #{record.sourcetargetid,jdbcType=INTEGER},
      sourceTargetType = #{record.sourcetargettype,jdbcType=VARCHAR},
      targetType = #{record.targettype,jdbcType=VARCHAR},
      targetId = #{record.targetid,jdbcType=INTEGER},
      createdTime = #{record.createdtime,jdbcType=INTEGER},
      createdUserId = #{record.createduserid,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.jindumooc.pojo.OrderRefererLog" >
    update order_referer_log
    <set >
      <if test="refererlogid != null" >
        refererLogId = #{refererlogid,jdbcType=INTEGER},
      </if>
      <if test="orderid != null" >
        orderId = #{orderid,jdbcType=INTEGER},
      </if>
      <if test="sourcetargetid != null" >
        sourceTargetId = #{sourcetargetid,jdbcType=INTEGER},
      </if>
      <if test="sourcetargettype != null" >
        sourceTargetType = #{sourcetargettype,jdbcType=VARCHAR},
      </if>
      <if test="targettype != null" >
        targetType = #{targettype,jdbcType=VARCHAR},
      </if>
      <if test="targetid != null" >
        targetId = #{targetid,jdbcType=INTEGER},
      </if>
      <if test="createdtime != null" >
        createdTime = #{createdtime,jdbcType=INTEGER},
      </if>
      <if test="createduserid != null" >
        createdUserId = #{createduserid,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.jindumooc.pojo.OrderRefererLog" >
    update order_referer_log
    set refererLogId = #{refererlogid,jdbcType=INTEGER},
      orderId = #{orderid,jdbcType=INTEGER},
      sourceTargetId = #{sourcetargetid,jdbcType=INTEGER},
      sourceTargetType = #{sourcetargettype,jdbcType=VARCHAR},
      targetType = #{targettype,jdbcType=VARCHAR},
      targetId = #{targetid,jdbcType=INTEGER},
      createdTime = #{createdtime,jdbcType=INTEGER},
      createdUserId = #{createduserid,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>